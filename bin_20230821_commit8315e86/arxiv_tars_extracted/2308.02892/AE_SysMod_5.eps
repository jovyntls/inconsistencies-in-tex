%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: AE_SysMod.pdf
%%Creator: Adobe Acrobat 22.1.0
%%For: MEHDI
%%CreationDate: 10/12/2022, 10:45:26 PM
%%BoundingBox: 0 0 5109 1884
%%HiResBoundingBox: 0 0 5108.5200 1883.7600
%%CropBox: 0 0 5108.5200 1883.7600
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1126 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.425dc87, 2021/10/27-16:20:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® LTSC"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® LTSC"
   xmp:CreateDate="2022-10-12T22:45:07+03:30"
   xmp:ModifyDate="2022-10-12T22:45:07+03:30"
   xmpMM:DocumentID="uuid:73B80006-2B8F-4AD9-AE82-4BFC6B58CD10"
   xmpMM:InstanceID="uuid:73B80006-2B8F-4AD9-AE82-4BFC6B58CD10">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>VAIO</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -1883.76 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1883.76 li
5108.52 1883.76 li
5108.52 0 li
cp
clp
gsave
0 1883.76 mo
5109 1883.76 li
5109 -.23999 li
0 -.23999 li
cp
clp
gsave
0 1883.76 mo
5108.52 1883.76 li
5108.52 -.000244141 li
0 -.000244141 li
cp
eclp
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
0 1883.77 mo
5108.6 1883.77 li
5108.6 .00500488 li
0 .00500488 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
grestore
4.25 lw
1 lc
1 lj
10 ml
[29.75 21.25 ] 0 dsh
true sadj
47.596 565.79 mo
370.226 565.79 li
370.226 381.54 li
47.596 381.54 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
1 .934081 .310826 .289158 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /LYAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f329ff03929000000cc000000606376
74203fba58ec0000012c000006886670676da1ea42ac000007b400000913
676c7966d5ba76df0000f8b80000a30068656164f85c7982000010c80000
0036686865610dbb1cd30000110000000024686d7478d2573ec500001124
000069ac6c6f636119b5ef2200007ad0000036566d61787028a818210000
b128000000206e616d65df42d3300000b1480000308b70726570f940ca73
0000e1d4000016e1676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e4002effc000247b00000009000000004d53202000200000
fb040600fe0001c4079e0226200001ff0000000003c0050e000000200014
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000005aa001500a0fff8ff42fea2fdbc03b6015401cc
0108010e00ff00f5006e014000a0055e006b0570fff60122fff10547ffec
04faffec0131fff4000a03a0036600b400e1044c007c40465f5e5d5c5b5a
59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a
39383736352f2e2d2c2826252423221f181411100f0d0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b0042651582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228
453ab10200080d2d2c2045b00325456164b050515845441b2121592d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87b011
2bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b52584544
1b2121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2c4523456023456023456023766818
b08062202d2cb00426b00426b00425b0042545234520b003266062636820
b0032661658a2344442d2c2045b0005458b040442045b04061441b212159
2d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b
2121592d2c4b515820b0032545695358441b2121591b2121592d2c45b014
43b0006063b0016069442d2cb02f45442d2c452320458a60442d2c452345
60442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb01643
58b00326458a586466b01f601b64b020606620581b21b04059b001615923
586559b02923442310b029e01b2121212121592d2cb0164358b004254564
b020606620581b21b04059b0016123586559b0292344b00425b007250820
58021b0359b0052510b004252046b0042523423cb0072510b006252046b0
0425b0016023423c2058011b0059b0052510b00425b029e0b0072510b006
25b029e0b00425b00725082058021b0359b00425b003254348b00625b003
25b0016043481b2159212121212121212d2cb0164358b004254564b02060
6620581b21b04059b0016123581b6559b0292344b00525b0082508205802
1b0359b0042510b005252046b0042523423cb00425b0072508b0072510b0
06252046b00425b0016023423c2058011b0059b0042510b00525b029e0b0
2920456544b0072510b00625b029e0b00525b00825082058021b0359b005
25b003254348b00425b0072508b00625b00325b0016043481b2159212121
212121212d2c02b00425202046b004252342b0052508b003254548212121
212d2c02b0032520b0042508b0022543482121212d2c452320451820b000
50205823652359236820b040505821b04059235865598a60442d2c4b5323
4b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2cb000214b5458381b2121592d2cb0024354
58b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb00243
5458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c208a
08234b538a4b515a5823381b2121592d2c0020b200400325b0062649618b
3812342d2c014623466023466123201020468a61b8ff80628ab140408a70
4560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2c
b012004b014b54422d2cb1020042b123018851b1400188535a58b9100000
20885458b202010243604259b12401885158b920000040885458b2020202
436042b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259b94000
020063b80400885458b202400243604259595959592d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d000001000000063ae1202460e45f0f3cf50019080000000000
bbeb7ccc00000000d7497752fbdafd350a1a085000010009000200000000
0000000100000600fe0001c40aa0fbdafa860a1a00010000000000000000
00000000000019ac040e0000000000000000000001cf0000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000043c004f000000000000
0000000000000000000000000000050b008d000000000000000000000000
03e7008d0000000000000000000000000000000000000000000000000000
0000000000000000000003ac008d05190049000000000000000000000000
000000000000000000000000000000000222008d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000362008d00000000000000000000
0000000000000000000006fe008d0545008d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000442008d
00000000000000000481008d00000000000000000000000003c8003f0000
00000000000000000000000000000000000003f6000c0000000000000000
000000000539008c00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000447000a00000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003cb005a0000000000000000
00000000000000000000000004910086000000000000000000000000038f
008600000000000000000000000000000000000000000000000000000000
000000000000000003580086049c00580000000000000000000000000000
0000049c0086000000000000000002100086000000000000000000000000
000000000000000000000000000000000210001800000000000000000000
000000000000000000000000000002fc0086000000000000000000000000
00000000000000000648008604c700860000000000000000000000000000
00000000000004da00550000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003fd00860000
00000000000004250086000000000000000000000000036f004300000000
00000000000000000000000000000000037b001b00000000000000000000
000004ac0084000000000000000000000000000000000000000000000000
000000000000000000000000000000000435001b00000000000000000000
000000000000000000000000000003cd000b000000000000000000000000
00000000038f003e00000000000000000000000003f30047000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000359004800000000000000000000
00000000000000000000077d004800000000060e004800000000044b004b
0000000000000000000000000407004a0000000000000000000000000000
000000000000000000000000000000000000000000000288001900000000
0000000004ce001906c2001909090019046f001900000000000000000000
000000000000000000000000000000000000000000000000000006b60019
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000046f0019
00000000000000000000000006b60019051600190000000000000000075e
001903cb001b00000000000000000000000000000000044b004b00000000
000000000000000000000000044b007e000000000000000001f7006b0000
000000000000000000000000000000000000000000000000000000000000
01f7007e0000000000000000000000000000000000000000000000000000
00000000000001f7007e0000000000000000000000000000000000000000
0682007e044b007e00000000000000000000000000000000000000000000
0000044d0048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000044b007e000000000000
000002d8007e000000000000000000000000033100490000000000000000
00000000000000000000000005d4004900000000000000000000000002c6
00170000000000000000000000000510001704af00170000000000000000
00000000000000000000000000000000000000000000000004af00170540
0017078a0017072800170000000000000000000000000000000000000000
00000000000000000000000007280017044b007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
03c9001600000000000000000000000000000000000000000000000003ca
001600000000000000000000000000000000032e00450000000000000000
0000000000000000000000000000000002bf0036000000000244003802f5
003a02c7003a01d0001c029c001802fb005a017a004f0000000000000000
0176005a046c005a02f9005a02f5003902f5005a000000000200005a023a
003c01fa001c02fb005a02a50019000000000000000002a60017023a0034
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001f7000001e200000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000029b00e600000000000000000000
0000000000000000000000000000026900cf000000000000000000000000
0000000000000000023500a0000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000273003b
0273003b0000000000000000000000000000000000000000000000000000
0000000000000000000000000000027e006b027e00610000000000000000
00000000000000000259006d025900630000000000000000027e006b027e
006100000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000038200790000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002de001903f2004f03f00043
0000000003e9004f0442006600000000000000000000000000000000040e
0094040e0058040e005500000000040e0060040e00540000000000000000
000000000000000002ad001c03a000510385004d00000000038a005f03ce
005800000000000000000000000000000000039f0079039f0050039f0053
00000000039f0062039f00450000000000000000000000000000000002de
001903f2004f03f000430000000003e9004f044200660000000000000000
0000000000000000040e0094040e0058040e005500000000040e0060040e
0054000000000000000000000000000000000205001d02b4003e02b00038
0000000002b2004302e4004b00000000000000000000000002d7003b0000
00000000000001c7004d01c70047000000000205001d02b4003e02b00038
0000000002b2004302e4004b00000000000000000000000002d7003b0000
00000000000001c7004d01c7004700000000020500250270003002740023
00000000026a0031027a002a000000000000000000000000000000000205
0025027000300274002300000000026a0031027a002a0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003fc
00340000000003fc00540000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000004c1006600000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003160054036b007802b7
007802920078037c00550000000001b00078000000000000000002670078
049a0078039200780000000002f4007800000000030d00780288003a02b0
001e0378006e000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000036b007802b70078
00000000037c00550000000001b00078000000000000000002670078049a
00780392007800000000000000000000000002f40078030d007802b0001e
0378006e0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000019900000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000027000540270004002700044000000000270004b027000360000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000002660059026600470266004a00000000
026600510266003d00000000000000000000000000000000000000000000
000000000000000000000000ffa800000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000ffba000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00>
<0000009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e01300130013001300130013001990199019901990231
02310231023102310231023102310231023102c703890389038903890389
03890389038903c003c003c003c003c003c003c003c003c003c003c003c0
03c003c003c0040e040e040e040e040e040e04d105820582058205820582
058205820582058205820582058205820582058205820582058205fe05fe
05fe06ae06ae06ae06ae07690769076907690769076907c707c707c707c7
083008300830083008300830083008300830083008300830083008300830
083008300830083008300830083008300830083008300830089608960896
0896089608960896089608960896089608960896089608fd08fd08fd08fd
08fd08fd094209420942094209a109a109a109a109a109a109a109a109a1
09a109f00a6c0a6c0a6c0a6c0a6c0aca0aca0aca0af60af60af60af60af6
0af60af60af60b010b010b010b010b010b010b010b360b360b360b360b36
0b360bac0c170c170c170c170c170c170c650c650c650c650c650c650c65
0c650c650c650c650c650cbf0cbf0cbf0d3c0d3c0d3c0d3c0dc50dc50dc5
0dc50dc50dc50e050e050e050e050e550e550e550e550e550e550e550e55
0e550e550e550ea50ea50ea50ea50ea50ea50ea50ef70ef70ef70ef70ef7
0f500f500f500f50103b103b103b103b103b103b103b103b103b103b103b
103b103b103b10d010d010d010d010d010d011a111a1127e127e13191319
1319131913e413e413e413e413e413e413e413e413e413e4146d146d146d
151915d916e1177a177a177a177a177a177a177a177a177a177a185b185b
185b185b185b185b185b185b185b185b185b185b185b185b185b18e618e6
18e618e619b51a661a661a661b611c661c661c661c661c661d011d011d01
1d011d011d7e1d7e1d7e1dd21dd21dd21dd21dd21dd21dd21dd21dd21dfe
1dfe1dfe1dfe1dfe1dfe1dfe1dfe1dfe1e401e401e401e401e401e401f01
1f871f871f871f871f871f871f871ff91ff91ff91ff91ff91ff91ff91ff9
1ff91ff91ff91ff9209a209a209a211821182118211821ea21ea21ea21ea
21ea21ea22eb22eb22eb22eb23812381238123812431243d243d243d243d
243d243d243d243d243d24b42564265b2667266726672667266726672667
266726672724279f279f279f279f279f279f279f279f279f279f279f280b
280b280b280b280b280b280b287828782878287828782909290929092909
2909290929092978297829d52a3b2a9e2aff2bba2c172c5a2c5a2c5a2c87
2d072d5d2da62e102e102e632ed92f322f8b2fe22fe22fe23038308b308b
308b308b308b308b308b308b308b308b308b308b308b308b308b308b308b
308b308b308b308b308b308b308b308b308b308b308b308b308b308b308b
308b308b308b308b308b308b308b308b308b308b308b308b308b308b308b
308b308b308b308b308b308b308b308b308b308b30af30d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d330d330d330d330d330d330d330d330d330d330d330d330d3
30d330d330d33121312131213121312131213121316e316e316e316e316e
316e31b631b631b631b631b631b631b631b631b631b631b631b631b631b6
31b631b631b631b631b631b631b631b631b631b631b631b631b631db31e4
31e431e431e431e431e431e431e431e431e431e4322c3274327432743274
327432bc330533053305330d331533153315331533153315331533153315
331533153315331533153364336433643364336433643364336433643364
336433643364336433643364336433643364336433643364336433643364
3364336433643364336433643364336433643364336433a7342034c834c8
353f35bd35bd35bd35bd35bd3619368a372c372c37a33876387638763876
387638b9392e39da39da3a5b3ada3ada3ada3ada3ada3b343b3c3b443b44
3bc63c413c413c413c413c413c833cfe3da43da43e203e283e283e283e28
3e283ec53fa240b340b3417b41834183418341834183418c4195419e419e
41a741b041b041b041b041b941b941b941c241cb41cb420d427443044304
438143f343f343f343f3442f442f442f447644be44be4501456346074607
467f46f946f946f946f946f94702470b47144714471d4726472647264726
472647264726472647264726472647264726472647264726472647264726
472647264726472647264726477d477d47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd47dd
48ef48ef48ef48ef48ef48ef48ef48ef48ef48ef48ef48ef48ef48ef48ef
48ef48ef48ef48ef495b4963496b49ac49b449b449bc49bc49bc49c449cc
49d449d449dc49dc49e44a5f4a674a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f
4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4a6f4ab44b054b05
4b7d4b7d4ba24ba24ba24bd04c324c974c974c974c974ce34d564d8a4dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc94dc9
4e054e584ec54ec54f204f834f834f834f834f834f834f834f834f834f83
4f834f834f834f834f834f834f834f834f834f834fbe500b5078507850d3
513451345134513451345134515351535153516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f516f516f516f516f516f516f516f516f516f516f516f516f516f516f
516f51805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
518051805180518051805180518051805180518051805180518051805180
51805180518051805180518051805180518051800000000100001b2a0096
00100078000300020010002f006000000cf816e1000200010000002d0222
0000000300000000021000000000000300000001000e0210000000030000
0002000804d60000000300000003002e04b00000000300000004001804c6
0000000300000005001804de0000000300000006001804f6000000030000
00070076050e0000000300000008002a0592000000030000000900200796
000000030000000a02a00210000000030000000b005607b6000000030000
000c002a080c000000030000000d0e060836000000030000000e004a07b6
00010000000000000108163c000100000000000100071744000100000000
0002000418a70001000000000003001718940001000000000004000c189f
0001000000000005000c18ab0001000000000006000c18b7000100000000
0007003b18c30001000000000008001516430001000000000009001018fe
000100000000000a01501744000100000000000b002b190e000100000000
000c00151939000100000000000d0703194e000100000000000e0025190e
0003000104090000021205840003000104090001000e0210000300010409
0002000804d60003000104090003002e04b00003000104090004001804c6
0003000104090005001804de0003000104090006001804f6000300010409
00070076050e0003000104090008002a0592000300010409000900200796
000300010409000a02a00210000300010409000b005607b6000300010409
000c002a080c000300010409000d0e182051000300010409000e004a07b6
00a9002000320030003100380020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e000d0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e00430061006c006900620072
0069002000690073002000610020006d006f006400650072006e00200073
0061006e0073002000730065007200690066002000660061006d0069006c
00790020007700690074006800200073007500620074006c006500200072
006f0075006e00640069006e006700730020006f006e0020007300740065
006d007300200061006e006400200063006f0072006e006500720073002e
002000490074002000660065006100740075007200650073002000720065
0061006c0020006900740061006c006900630073002c00200073006d0061
006c006c00200063006100700073002c00200061006e00640020006d0075
006c007400690070006c00650020006e0075006d006500720061006c0020
0073006500740073002e0020004900740073002000700072006f0070006f
007200740069006f006e007300200061006c006c006f0077002000680069
0067006800200069006d007000610063007400200069006e002000740069
006700680074006c007900200073006500740020006c0069006e00650073
0020006f0066002000620069006700200061006e006400200073006d0061
006c006c0020007400650078007400200061006c0069006b0065002e0020
00430061006c0069006200720069002700730020006d0061006e00790020
00630075007200760065007300200061006e006400200074006800650020
006e00650077002000720061007300740065007200690073006500720020
007400650061006d00200075007000200069006e00200062006900670067
00650072002000730069007a0065007300200074006f0020007200650076
00650061006c002000610020007700610072006d00200061006e00640020
0073006f006600740020006300680061007200610063007400650072002e
004d006900630072006f0073006f00660074003a002000430061006c0069
00620072006900200042006f006c006400560065007200730069006f006e
00200036002e0032003300430061006c0069006200720069002d0042006f
006c006400430061006c0069006200720069002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000740068
00650020004d006900630072006f0073006f00660074002000670072006f
007500700020006f006600200063006f006d00700061006e006900650073
002e00a9002000320030003100380020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e000d000a0048006500620072006500770020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200063006f007000790072006900670068
0074002000a9002000320030003000330020002600200032003000300037
002c002000520061006c00700068002000480061006e0063006f0063006b
002000260020004a006f0068006e00200048007500640073006f006e002e
002000540068006900730020006c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020006900730020006f00700065
006e00200073006f007500720063006500200073006f0066007400770061
0072006500200075006e00640065007200200074006800650020004d0049
00540020004c006900630065006e00730065003b00200073006500650020
0065006d0062006500640064006500640020006c006900630065006e0073
00650020006400650073006300720069007000740069006f006e00200066
006f0072002000640065007400610069006c0073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
00700073003a002f002f0064006f00630073002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f00610062006f007500740068007400740070003a
002f002f006c00750063006100730066006f006e00740073002e0063006f
006d004d006900630072006f0073006f0066007400200073007500700070
006c00690065006400200066006f006e0074002e00200059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e007400200074006f0020006300720065006100740065002c00200064
006900730070006c00610079002c00200061006e00640020007000720069
006e007400200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
0020006c006900630065006e007300650020007400650072006d00730020
006f00720020007400650072006d00730020006f00660020007500730065
002c0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000700072006f0064007500630074002c002000730065
00720076006900630065002c0020006f007200200063006f006e00740065
006e007400200069006e0020007700680069006300680020007400680069
007300200066006f006e0074002000770061007300200069006e0063006c
0075006400650064002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e00200041006e00790020006f00740068006500720020
007500730065002000690073002000700072006f00680069006200690074
00650064002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c6456657273696f6e20362e323343616c
696272692d426f6c6443616c6962726920697320612074726164656d6172
6b206f6620746865204d6963726f736f66742067726f7570206f6620636f
6d70616e6965732e4c7563286173292064652047726f6f7468747470733a
2f2f646f63732e6d6963726f736f66742e636f6d2f7479706f6772617068
792f61626f7574687474703a2f2f6c75636173666f6e74732e636f6d4d69
63726f736f667420737570706c69656420666f6e742e20596f75206d6179
20757365207468697320666f6e7420746f206372656174652c2064697370
6c61792c20616e64207072696e7420636f6e74656e74206173207065726d
697474656420627920746865206c6963656e7365207465726d73206f7220
7465726d73206f66207573652c206f6620746865204d6963726f736f6674
2070726f647563742c20736572766963652c206f7220636f6e74656e7420
696e207768696368207468697320666f6e742077617320696e636c756465
642e20596f75206d6179206f6e6c792028692920656d6265642074686973
20666f6e7420696e20636f6e74656e74206173207065726d697474656420
62792074686520656d62656464696e67207265737472696374696f6e7320
696e636c7564656420696e207468697320666f6e743b20616e6420286969
292074656d706f726172696c7920646f776e6c6f6164207468697320666f
6e7420746f2061207072696e746572206f72206f74686572206f75747075
742064657669636520746f2068656c70207072696e7420636f6e74656e74
2e20416e79206f74686572207573652069732070726f686962697465642e
0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261736564
206f6e20746865204d4954206c6963656e73652028687474703a2f2f656e
2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e73
65292c206170706c69657320746f20746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20d24c61796f7574204c6f676963d3206173206a6f696e746c7920646576
656c6f7065642062792052616c70682048616e636f636b20616e64204a6f
686e20487564736f6e2e200d0d5065726d697373696f6e20697320686572
656279206772616e7465642c2066726565206f66206368617267652c2074
6f20616e7920706572736f6e206f627461696e696e67206120636f707920
6f6620746865204f70656e54797065204c61796f7574206c6f6769632066
6f72204269626c6963616c2048656272657720616e64206173736f636961
74656420646f63756d656e746174696f6e2066696c6573202874686520d2
4c61796f7574204c6f67696320536f667477617265d3292c20746f206465
616c20696e20746865204c61796f7574204c6f67696320536f6674776172
6520776974686f7574207265737472696374696f6e2c20696e636c756469
6e6720776974686f7574206c696d69746174696f6e207468652072696768
747320746f207573652c20636f70792c206d6f646966792c206d65726765
2c207075626c6973682c20646973747269627574652c207375626c696365
6e73652c20616e642f6f722073656c6c20636f70696573206f6620746865
204c61796f7574204c6f67696320536f6674776172652c20616e6420746f
207065726d697420706572736f6e7320746f2077686f6d20746865204c61
796f7574204c6f67696320536f667477617265206973206675726e697368
656420746f20646f20736f2c207375626a65637420746f2074686520666f
6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f7665
20636f70797269676874206e6f7469636520616e64207468697320706572
6d697373696f6e206e6f74696365207368616c6c20626520696e636c7564
656420696e20616c6c20636f70696573206f72207375627374616e746961
6c20706f7274696f6e73206f6620746865204c61796f7574204c6f676963
20536f6674776172652e0d0d54484520534f465457415245204953205052
4f564944454420274153204953272c20574954484f55542057415252414e
5459204f4620414e59204b494e442c2045585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f205448452057415252414e54494553204f46204d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e542e20494e204e4f204556454e54205348414c4c205448452041555448
4f5253204f5220434f5059524947485420484f4c44455253204245204c49
41424c4520464f5220414e5920434c41494d2c2044414d41474553204f52
204f54484552204c494142494c4954592c205748455448455220494e2041
4e20414354494f4e204f4620434f4e54524143542c20544f5254204f5220
4f54484552574953452c2041524953494e472046524f4d2c204f5554204f
46204f5220494e20434f4e4e454354494f4e20574954482054484520534f
465457415245204f522054484520555345204f52204f5448455220444541
4c494e475320494e2054484520534f4654574152452e0d004d0069006300
72006f0073006f0066007400200073007500700070006c00690065006400
200066006f006e0074002e00200059006f00750020006d00610079002000
75007300650020007400680069007300200066006f006e00740020007400
6f0020006300720065006100740065002c00200064006900730070006c00
610079002c00200061006e00640020007000720069006e00740020006300
6f006e00740065006e00740020006100730020007000650072006d006900
7400740065006400200062007900200074006800650020006c0069006300
65006e007300650020007400650072006d00730020006f00720020007400
650072006d00730020006f00660020007500730065002c0020006f006600
200074006800650020004d006900630072006f0073006f00660074002000
700072006f0064007500630074002c002000730065007200760069006300
65002c0020006f007200200063006f006e00740065006e00740020006900
6e0020007700680069006300680020007400680069007300200066006f00
6e0074002000770061007300200069006e0063006c007500640065006400
2e00200059006f00750020006d006100790020006f006e006c0079002000
280069002900200065006d00620065006400200074006800690073002000
66006f006e007400200069006e00200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
79002000740068006500200065006d00620065006400640069006e006700
20007200650073007400720069006300740069006f006e00730020006900
6e0063006c007500640065006400200069006e0020007400680069007300
200066006f006e0074003b00200061006e00640020002800690069002900
2000740065006d0070006f0072006100720069006c007900200064006f00
77006e006c006f006100640020007400680069007300200066006f006e00
7400200074006f002000610020007000720069006e007400650072002000
6f00720020006f00740068006500720020006f0075007400700075007400
2000640065007600690063006500200074006f002000680065006c007000
20007000720069006e007400200063006f006e00740065006e0074002e00
200041006e00790020006f00740068006500720020007500730065002000
690073002000700072006f0068006900620069007400650064002e000d00
0a000d000a00540068006500200066006f006c006c006f00770069006e00
670020006c006900630065006e00730065002c0020006200610073006500
640020006f006e00200074006800650020004d004900540020006c006900
630065006e00730065002000280068007400740070003a002f002f006500
6e002e00770069006b006900700065006400690061002e006f0072006700
2f00770069006b0069002f004d00490054005f004c006900630065006e00
7300650029002c0020006100700070006c00690065007300200074006f00
200074006800650020004f00700065006e00540079007000650020004c00
610079006f007500740020006c006f00670069006300200066006f007200
20004200690062006c006900630061006c00200048006500620072006500
770020201c004c00610079006f007500740020004c006f00670069006320
1d0020006100730020006a006f0069006e0074006c007900200064006500
760065006c006f007000650064002000620079002000520061006c007000
68002000480061006e0063006f0063006b00200061006e00640020004a00
6f0068006e00200048007500640073006f006e002e0020000d000a000d00
0a005000650072006d0069007300730069006f006e002000690073002000
68006500720065006200790020006700720061006e007400650064002c00
2000660072006500650020006f0066002000630068006100720067006500
2c00200074006f00200061006e007900200070006500720073006f006e00
20006f0062007400610069006e0069006e00670020006100200063006f00
7000790020006f006600200074006800650020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
480065006200720065007700200061006e00640020006100730073006f00
630069006100740065006400200064006f00630075006d0065006e007400
6100740069006f006e002000660069006c00650073002000280074006800
650020201c004c00610079006f007500740020004c006f00670069006300
200053006f006600740077006100720065201d0029002c00200074006f00
20006400650061006c00200069006e00200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
7700610072006500200077006900740068006f0075007400200072006500
73007400720069006300740069006f006e002c00200069006e0063006c00
7500640069006e006700200077006900740068006f007500740020006c00
69006d00690074006100740069006f006e00200074006800650020007200
69006700680074007300200074006f0020007500730065002c0020006300
6f00700079002c0020006d006f0064006900660079002c0020006d006500
7200670065002c0020007000750062006c006900730068002c0020006400
6900730074007200690062007500740065002c0020007300750062006c00
6900630065006e00730065002c00200061006e0064002f006f0072002000
730065006c006c00200063006f00700069006500730020006f0066002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f006600740077006100720065002c00200061006e006400
200074006f0020007000650072006d006900740020007000650072007300
6f006e007300200074006f002000770068006f006d002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f0066007400770061007200650020006900730020006600750072006e00
69007300680065006400200074006f00200064006f00200073006f002c00
20007300750062006a00650063007400200074006f002000740068006500
200066006f006c006c006f00770069006e006700200063006f006e006400
6900740069006f006e0073003a000d000a000d000a005400680065002000
610062006f0076006500200063006f007000790072006900670068007400
20006e006f007400690063006500200061006e0064002000740068006900
730020007000650072006d0069007300730069006f006e0020006e006f00
740069006300650020007300680061006c006c0020006200650020006900
6e0063006c007500640065006400200069006e00200061006c006c002000
63006f00700069006500730020006f007200200073007500620073007400
61006e007400690061006c00200070006f007200740069006f006e007300
20006f006600200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002e00
0d000a000d000a00540048004500200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002700
4100530020004900530027002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c0020004500580050005200450053005300
20004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f002000540048004500
2000570041005200520041004e00540049004500530020004f0046002000
4d00450052004300480041004e0054004100420049004c00490054005900
2c0020004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e0054002e00200049004e0020004e00
4f0020004500560045004e00540020005300480041004c004c0020005400
48004500200041005500540048004f005200530020004f00520020004300
4f005000590052004900470048005400200048004f004c00440045005200
530020004200450020004c004900410042004c004500200046004f005200
200041004e005900200043004c00410049004d002c002000440041004d00
410047004500530020004f00520020004f00540048004500520020004c00
49004100420049004c004900540059002c00200057004800450054004800
45005200200049004e00200041004e00200041004300540049004f004e00
20004f004600200043004f004e00540052004100430054002c0020005400
4f005200540020004f00520020004f005400480045005200570049005300
45002c002000410052004900530049004e0047002000460052004f004d00
2c0020004f005500540020004f00460020004f005200200049004e002000
43004f004e004e0045004300540049004f004e0020005700490054004800
2000540048004500200053004f0046005400570041005200450020004f00
52002000540048004500200055005300450020004f00520020004f005400
48004500520020004400450041004c0049004e0047005300200049004e00
2000540048004500200053004f004600540057004100520045002e000d00
0a0000>
<b20903eb411d03430001003b03410001008b0330009b033000020004032f
0064032f0074032f00d4032f0004032d032a0038001f032c032a0038001f
032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9
ffc0032ab21c20464163033c0038033b0055033a00380339005503380038
033700550336003803350055033400380333005503230038032200550321
003803200055002b03400001006b03400001033d003803220055006b033b
00010024033100540331000200240331003403310054033100f403310004
001403270044032700e40327000300040327002403270044032700740327
008403270094032700d4032700f40327000800a403220001003403200001
001403200024032000440320005403200074032000840320000602f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff52
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b
73737373185f5e00000000>
[15489 16337 9905 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

3 0 3 <> LYAAAA+Calibri-Bold AddT42Char 
3 3420 94 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>LYAAAA+Calibri-Bold AddT42Char 
3 8310 272 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>LYAAAA+Calibri-Bold AddT42Char 
3 9778 286 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>LYAAAA+Calibri-Bold AddT42Char 
4 654 381 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>LYAAAA+Calibri-Bold AddT42Char 
4 1204 396 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>LYAAAA+Calibri-Bold AddT42Char 
4 4552 437 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>LYAAAA+Calibri-Bold AddT42Char 
3 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>LYAAAA+Calibri-Bold AddT42Char 
LYAAAA+Calibri-Bold /CharStrings get begin
/space 3 def
/S 94 def
/c 272 def
/e 286 def
/o 381 def
/r 396 def
/u 437 def
end
LYAAAA+Calibri-Bold /Encoding get
dup 32 /space put
dup 83 /S put
dup 99 /c put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold /LYAAAA+Calibri-Bold findfont ct_VMDictPut
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 50{/.notdef}rp /S 15{/.notdef}rp /c /.notdef /e 
9{/.notdef}rp /o 2{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
124.18 455.69 mo
(Source )
[28.3804 32.2797 32.2202 21.2997 25.08 30.1804 0 ]xsh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 1810 47 <0001008dfffa0195051400150029b10102435558b900000294b5400a1052
055500183f3f012f1aed30311bb31052055500183f3f30315925140e0223
222e023511343e0233321e021501950d1e322726331e0d0d1f322627321e
0d240a100a06060a100a04c60a100a06060a100a>EJZYNT+Calibri-Bold AddT42Char 
3 7840 258 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>EJZYNT+Calibri-Bold AddT42Char 
3 14018 336 <0003001bfe9303a203d3003e004e005f0100b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d3fed5d5d12393f
ed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173930311b40550f3007
0338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e5301
18530153f1cd150117150100151015021515603803f93c482a203c42cc42
020442010f00420142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d
3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d1217
393031590114062323161615140e0223222627060615141617171e031514
0e0223222e0235343e0237262635343637262635343e0233321617213216
01342623220e0215141633323e0213342627270e0315141633323e0203a2
1610691613346189542b4e150c13332ed94c77512b3a74af7572a1672f11
21301f2b2f362b232a376288522a4d21011b1115febd5049253825125047
263825133b483fb31a1f1306655c394e30140360302e183d214e79532b15
0e0d24161d2502080325435e3c4275563224405935213c373217174f2f3b
61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d3002
051323201e10323417262f00>EJZYNT+Calibri-Bold AddT42Char 
4 0 373 <0001007efffa060903d7005000a9b10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1aed2b3fed2b012fed39d4ed11392fed3930311bb900
10ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d400e
40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1aed2b3fed2b
30315925140e0223222e023511342e022322060711140e0223222e023511
342e022322060711140e0223222e023511343e0233321e02151536363332
1e02173e0333321e021506090c1c302526301d0b112335252d5c360c1d30
2425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a4a93
503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a351d
4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a0f0a
037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/I 47 def
/a 258 def
/g 336 def
/m 373 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 73 /I put
dup 97 /a put
dup 103 /g put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 9{/.notdef}rp /S 13{/.notdef}rp /a 
/.notdef /c /.notdef /e /.notdef /g 5{/.notdef}rp /m 
/.notdef /o 2{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [60.024 0 0 -60.024 0 0 ]msf
132.38 527.69 mo
(Image)
[16.0263 48.7997 29.6521 28.4513 0 ]xsh
8 lw
[] 0 dsh
749.37 473.67 mo
652.07 473.67 li
@
767.91 473.67 mo
758.63 474.21 749.98 478.53 743.99 485.63 cv
747.75 478.1 747.75 469.24 743.99 461.71 cv
749.98 468.81 758.63 473.13 767.91 473.67 cv
cp
ef
444.54 473.67 mo
370.22 473.67 li
@
463.08 473.67 mo
453.8 474.21 445.15 478.53 439.16 485.63 cv
442.92 478.1 442.92 469.24 439.16 461.71 cv
445.15 468.81 453.8 473.13 463.08 473.67 cv
cp
ef
491.42 677.74 mo
623.72 677.74 li
639.38 677.74 652.07 665.05 652.07 649.39 cv
652.07 297.94 li
652.07 282.29 639.38 269.6 623.72 269.6 cv
491.42 269.6 li
475.77 269.6 463.08 282.29 463.08 297.94 cv
463.08 649.39 li
463.08 665.05 475.77 677.74 491.42 677.74 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
5 lw
491.42 677.74 mo
623.72 677.74 li
639.38 677.74 652.07 665.05 652.07 649.39 cv
652.07 297.94 li
652.07 282.29 639.38 269.6 623.72 269.6 cv
491.42 269.6 li
475.77 269.6 463.08 282.29 463.08 297.94 cv
463.08 649.39 li
463.08 665.05 475.77 677.74 491.42 677.74 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 2466 69 <0001008dfffa04b80512003d00b3b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
ed3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f11331133
30311bb2385229b8fff040120f26024c29282e220c100f26024c0c0b060f
b8017db7270a19225119552eb8017db240065400183f1aed3f3f123939ed
1139392b111239392b3f30315925140e022323222e022701262627231616
1511140e0223222e02351134363333321e0217131e03173326263511343e
0233321e021504b8101b25137023332b2819febe1c3a170204040b1b2e24
232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e190a5c
1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b2f2f
0d1e3527fe272b53535028469845025f0a100c05050c100a>EJZYNT+Calibri-Bold AddT42Char 
3 15100 349 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>EJZYNT+Calibri-Bold AddT42Char 
3 15356 367 <0001007efffa017a05700015003eb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1aed30315f5e5d
5d5d5d1bb31046054c00183f3f30315925140e0223222e023511343e0233
321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a0f
0a05230a100b06060b100a00>EJZYNT+Calibri-Bold AddT42Char 
4 386 374 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>EJZYNT+Calibri-Bold AddT42Char 
4 2390 410 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>EJZYNT+Calibri-Bold AddT42Char 
4 5232 460 <00010045000002ee03c0002b00a0b10102435558400a0f2501100f0f0111
0610b802b9b61f141f141f0026b802bdb2092511b8ffe8b40b0f014c11b8
011d400a19480f27180b0f014c27b8011db240054b00183f1aed2b323fed
2b32012fedcd39392f2f10ed3031005f5e5d5e5d1b400b0f2501100f0f01
11062511b8ffe8b40b0f014c11b8011d400a19480f27180b0f014c27b801
1db240054b00183f1aed2b323fed2b3230315f5e5d5e5d5925140e022321
22263535343e02370121222635343e023321321e021515140e0207012132
1e0202ee060a100afdb91b1d03090f0c014efec41317050a100b02210e14
0d0704080f0afeb4016009100b06671d29180924292e121d1b1c11020430
351d27170a06101c1531141f1c1c10fdfd081627>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/N 69 def
/i 349 def
/l 367 def
/n 374 def
/t 410 def
/z 460 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 78 /N put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 116 /t put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 
13{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r /.notdef /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
574.58 659.47 mo
(Normalization )
[-39.5398 -32.2797 -21.2997 -48.7803 -29.6401 -14.7603 -14.76 -23.8203 -29.6401 -20.8201 -14.76 -32.2798 
-32.2201 0 ]ysh
4465.96 837.15 mo
4658.2 837.15 li
4673.85 837.15 4686.54 824.46 4686.54 808.8 cv
4686.54 136.51 li
4686.54 120.86 4673.85 108.16 4658.2 108.16 cv
4465.96 108.16 li
4450.31 108.16 4437.62 120.86 4437.62 136.51 cv
4437.62 808.8 li
4437.62 824.46 4450.31 837.15 4465.96 837.15 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
4465.96 837.15 mo
4658.2 837.15 li
4673.85 837.15 4686.54 824.46 4686.54 808.8 cv
4686.54 136.51 li
4686.54 120.86 4673.85 108.16 4658.2 108.16 cv
4465.96 108.16 li
4450.31 108.16 4437.62 120.86 4437.62 136.51 cv
4437.62 808.8 li
4437.62 824.46 4450.31 837.15 4465.96 837.15 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 1122 38 <0001008dfffa0363050e002700b7b10102435558b10713b8029440160d1d
001e1d07280f014d07180c0d014c07100b014d07ba01570013fff0b60b01
4d13131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119
5500183f3f1aed2b2b12392f2bed2b2b2b012f2fc41139ed3230311b4011
07280f014d07180c0d014c07100b014d07ba01570013fff0b60b014d1313
1906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119550018
3f3f1aed2b2b12392f2bed2b2b2b30315901140e0223211121321e021514
0e02232111140e0223222e02351134363321321e020363050b0e09fe5901
8d090e0b05050b0e09fe730c1f322726331e0d2d210261090e0b0504a21e
29180cfea40a18281e1e281a0bfe1e0b100b06060b100b04952c270b192a
>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/F 38 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 4{/.notdef}rp /N 
4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n 
/o 2{/.notdef}rp /r /.notdef /t /u 4{/.notdef}rp /z 
133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4506.07 603.36 mo
(Flattening)
[-27.5399 -14.7603 -29.6401 -20.8201 -20.8199 -30.1803 -32.2202 -14.7601 -32.2201 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4578.07 683.45 mo
( )sh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
5 4604 1085 <00010034005f03c80420002f0025b206002ab80208b518121e2a241eb801
26b20c0612002f33cdfdcd33012f33cdfdcd33303101140e02232111140e
0223222e02351121222e0235343e02332111343e0233321e02151121321e
0203c8060c1009fec90a18281e1e28180bfeca090f0c07060b0e0901390b
18281e1e28180a013a080f0b06023f1c26170afead0a0f0b06060b0f0a01
530a17261c1b27170a01520a110b06060b110afeae0a1727>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/plus 1085 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 43 /plus put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 26{/.notdef}rp /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /.notdef /t /u 
4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4578.07 669.89 mo
(+ Normalization)
[-29.88 -13.5599 -39.5398 -32.2797 -21.2998 -48.7802 -29.6403 -14.76 -14.7603 -23.8201 -29.6403 -20.8199 
-14.7603 -32.2795 0 ]ysh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 10184 296 <00010019fffa02980578003c0071b10102435558b31610001bb8025fb330
2a250ab8011db336471a26b8ffe8b40b0f014c26b8011fb6403048204c10
4800183f3f3f1aed2b323fed012fc433fdc433c430311bb9000a011db336
471a26b8ffe8b40b0f014c26b8011fb6403048204c104800183f3f3f1aed
2b323fed30315901140e0223222e0223220e02151533321e021514062323
11140e0223222e02351123222635343e02333335343e0233321e04029804
080a0607111922171b271a0ca3090f0a051413a30c1c322424311d0b7013
1305090f0a6f244d77512746280e090404f21d23130707080711253b2b52
0a17281d372ffd2e0a0f0a05050a0f0a02d22f371d28170a4b5b895b2e0d
0f0d1927>EJZYNT+Calibri-Bold AddT42Char 
4 1456 400 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/f 296 def
/s 400 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 102 /f put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 26{/.notdef}rp /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e /f /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4650.07 636.17 mo
(for antennas )
[-18.9596 -32.2798 -21.2997 -13.5599 -29.6401 -32.2202 -20.8199 -30.1803 -32.2202 -32.2202 -29.6401 -23.9402 
0 ]ysh
4465.96 837.15 mo
4658.2 837.15 li
4673.85 837.15 4686.54 824.46 4686.54 808.8 cv
4686.54 136.51 li
4686.54 120.86 4673.85 108.16 4658.2 108.16 cv
4465.96 108.16 li
4450.31 108.16 4437.62 120.86 4437.62 136.51 cv
4437.62 808.8 li
4437.62 824.46 4450.31 837.15 4465.96 837.15 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
4465.96 837.15 mo
4658.2 837.15 li
4673.85 837.15 4686.54 824.46 4686.54 808.8 cv
4686.54 136.51 li
4686.54 120.86 4673.85 108.16 4658.2 108.16 cv
4465.96 108.16 li
4450.31 108.16 4437.62 120.86 4437.62 136.51 cv
4437.62 808.8 li
4437.62 824.46 4450.31 837.15 4465.96 837.15 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4506.07 603.36 mo
(Flattening)
[-27.5399 -14.7603 -29.6401 -20.8201 -20.8199 -30.1803 -32.2202 -14.7601 -32.2201 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4578.07 683.45 mo
( )sh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4578.07 669.89 mo
(+ Normalization)
[-29.88 -13.5599 -39.5398 -32.2797 -21.2998 -48.7802 -29.6403 -14.76 -14.7603 -23.8201 -29.6403 -20.8199 
-14.7603 -32.2795 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4650.07 636.17 mo
(for antennas )
[-18.9596 -32.2798 -21.2997 -13.5599 -29.6401 -32.2202 -20.8199 -30.1803 -32.2202 -32.2202 -29.6401 -23.9402 
0 ]ysh
8 lw
4419.08 472.71 mo
4064.88 473.67 li
1 /0 /CSD get_res sepcs
1 sep
@
4437.62 472.66 mo
4428.34 473.22 4419.7 477.57 4413.73 484.68 cv
4417.47 477.14 4417.45 468.28 4413.66 460.76 cv
4419.68 467.85 4428.34 472.15 4437.62 472.66 cv
cp
ef
4851.74 1319.99 mo
5043.97 1319.99 li
5059.62 1319.99 5072.31 1307.3 5072.31 1291.64 cv
5072.31 694.87 li
5072.31 679.21 5059.62 666.52 5043.97 666.52 cv
4851.74 666.52 li
4836.08 666.52 4823.39 679.21 4823.39 694.87 cv
4823.39 1291.64 li
4823.39 1307.3 4836.08 1319.99 4851.74 1319.99 cv
cp
0 .993347 1 0 cmyk
ef
5 lw
4851.74 1319.99 mo
5043.97 1319.99 li
5059.62 1319.99 5072.31 1307.3 5072.31 1291.64 cv
5072.31 694.87 li
5072.31 679.21 5059.62 666.52 5043.97 666.52 cv
4851.74 666.52 li
4836.08 666.52 4823.39 679.21 4823.39 694.87 cv
4823.39 1291.64 li
4823.39 1307.3 4836.08 1319.99 4851.74 1319.99 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 316 18 <0001004fffeb040c052300390089b10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed012fedd4c430
311bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015ab7
3530180b0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed3031
5925140e0623222e02353412363633321e0615140e0223222e0223220e02
15141e0233323e0233321e02040c03060a163f5b754485d69650589edd85
366455441b0a0603040a0e090f2e4965464d79552c2f577b4d4666492f0d
0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c261c
1e2a1a0c232b233f75a66872a76c3521282008182b00>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/C 18 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 67 /C put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 23{/.notdef}rp /C 2{/.notdef}rp /F 
2{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/.notdef /c /.notdef /e /f /g /.notdef /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 
/t /u 4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4950.41 1195.56 mo
(Communication)
[-31.7404 -32.2797 -48.7803 -48.7802 -32.2202 -32.2202 -14.7601 -25.08 -29.6402 -20.82 -14.7601 -32.2797 
0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
5022.41 1106.06 mo
( )sh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 14850 346 <0001007efffa03d205700032006bb10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1aed2b1239012fed32d4ed30311bb22a1910b8ffe8b40b0f
014c10b8014d4009402d4a2446194c054c00183f3f3f3f1aed2b12393031
5925140e0223222e023511342e022322060711140e0223222e023511343e
0233321e021511363633321e021503d20c1c312425311c0c132439263062
350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a0505
0a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b06060b10
0afe13403f3c688b6300>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/h 346 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 23{/.notdef}rp /C 2{/.notdef}rp /F 
2{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/.notdef /c /.notdef /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 
/t /u 4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
5022.41 1092.48 mo
(Channel)
[-31.7405 -32.2201 -29.6402 -32.2202 -32.2202 -30.1804 0 ]ysh
4851.74 1319.99 mo
5043.97 1319.99 li
5059.62 1319.99 5072.31 1307.3 5072.31 1291.64 cv
5072.31 694.87 li
5072.31 679.21 5059.62 666.52 5043.97 666.52 cv
4851.74 666.52 li
4836.08 666.52 4823.39 679.21 4823.39 694.87 cv
4823.39 1291.64 li
4823.39 1307.3 4836.08 1319.99 4851.74 1319.99 cv
cp
0 .993347 1 0 cmyk
ef
4851.74 1319.99 mo
5043.97 1319.99 li
5059.62 1319.99 5072.31 1307.3 5072.31 1291.64 cv
5072.31 694.87 li
5072.31 679.21 5059.62 666.52 5043.97 666.52 cv
4851.74 666.52 li
4836.08 666.52 4823.39 679.21 4823.39 694.87 cv
4823.39 1291.64 li
4823.39 1307.3 4836.08 1319.99 4851.74 1319.99 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4950.41 1195.56 mo
(Communication)
[-31.7404 -32.2797 -48.7803 -48.7802 -32.2202 -32.2202 -14.7601 -25.08 -29.6402 -20.82 -14.7601 -32.2797 
0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
5022.41 1106.06 mo
( )sh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
5022.41 1092.48 mo
(Channel)
[-31.7405 -32.2201 -29.6402 -32.2202 -32.2202 -30.1804 0 ]ysh
8 lw
4686.54 472.66 mo
4947.85 472.66 li
4947.85 649.1 li
1 /0 /CSD get_res sepcs
1 sep
@
4947.85 666.52 mo
4947.35 657.8 4943.28 649.68 4936.61 644.04 cv
4943.69 647.58 4952.02 647.58 4959.09 644.04 cv
4952.42 649.68 4948.36 657.8 4947.85 666.52 cv
cp
ef
4.25 lw
[29.75 21.25 ] 0 dsh
20.125 1550.89 mo
428.265 1550.89 li
428.265 1366.64 li
20.125 1366.64 li
cp
1 .934081 .310826 .289158 cmyk
@
gsave
7.61229e-05 1883.76 mo
5108.52 1883.76 li
5108.52 0 li
7.61229e-05 0 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 3068 90 <0002008dfffa044d050e00360044009bb10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1aed2b12392fed2b39012fed32d4edd4ed1112393930311bb12e10b8ffe8
b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b6402151
1755055500183f3f3f1aed2b12392fed2b3930315925140e0223222e0227
032e03232311140e0223222e023511343633213216171e0315140e02071e
031717161601342627262623231133323e02044d081e3a322a321d0c0474
152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e3c1d
332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b110c01
21314c331afe130a100a06060a100a04972c2704030b3657774d416b543e
130e2839492eff262303644058120506fe911b314400>EJZYNT+Calibri-Bold AddT42Char 
3 9468 282 <0002004bffe903cc056d002600390093b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1aed2b3fed2b12
17393f012fedd4ed323930311b400921460b39271b040e2ab8ffe8b40b0f
014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f3f
1aed2b3fed2b1217393f30315925140e0223222e023535060623222e0235
343e023332161711343e0233321e021503262623220e0215141e0233323e
023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d3025
25301c0cfa36633631472b15122944341a31333620220b0f0a04040a0f0b
634a524f86b36377be86483d3b01e30a100b06060b100afd344448315265
35386a53320f22372800>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/R 90 def
/d 282 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 82 /R put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 23{/.notdef}rp /C 2{/.notdef}rp /F 
2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp 
/a /.notdef /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r 
/s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
44.136 1440.84 mo
(Reconstructed )
[33.7802 30.1804 25.08 32.2797 32.2202 23.9401 20.82 21.2997 32.2202 25.08 20.82 30.1804 
32.2202 0 ]xsh
grestore
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
147.67 1512.84 mo
(Image)
[16.0199 48.7802 29.6402 28.4399 0 ]xsh
8 lw
[] 0 dsh
765.25 1466.44 mo
701.19 1465.98 li
@
682.65 1465.85 mo
691.93 1465.38 700.61 1461.11 706.66 1454.06 cv
702.84 1461.56 702.77 1470.42 706.48 1477.98 cv
700.54 1470.84 691.92 1466.45 682.65 1465.85 cv
cp
ef
493.66 1465.85 mo
446.8 1465.85 li
@
428.27 1465.85 mo
437.54 1465.31 446.19 1460.99 452.19 1453.89 cv
448.42 1461.42 448.42 1470.28 452.19 1477.81 cv
446.19 1470.71 437.54 1466.38 428.27 1465.85 cv
cp
ef
522.01 1714.54 mo
654.3 1714.54 li
669.96 1714.54 682.65 1701.85 682.65 1686.19 cv
682.65 1245.5 li
682.65 1229.85 669.96 1217.16 654.3 1217.16 cv
522.01 1217.16 li
506.35 1217.16 493.66 1229.85 493.66 1245.5 cv
493.66 1686.19 li
493.66 1701.85 506.35 1714.54 522.01 1714.54 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
5 lw
522.01 1714.54 mo
654.3 1714.54 li
669.96 1714.54 682.65 1701.85 682.65 1686.19 cv
682.65 1245.5 li
682.65 1229.85 669.96 1217.16 654.3 1217.16 cv
522.01 1217.16 li
506.35 1217.16 493.66 1229.85 493.66 1245.5 cv
493.66 1686.19 li
493.66 1701.85 506.35 1714.54 522.01 1714.54 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 608 24 <0002008d000004c0050e0012001f006fb10102435558bf0013029b000000
1a029200090018ffe8b40b0f014c18b8012e40090e511b180b0f014c1bb8
0154b240055400183f1aed2b3fed2b012fedd4ed30311bb90018ffe8b40b
0f014c18b8012e40090e511b180b0f014c1bb80154b240055400183f1aed
2b3fed2b30315901140e0223212226351134363321321e0205342e022323
1133323e0204c05daef9acfecb212d2d21014cadf1a556fef02b5f957985
896c946331029ab2fda04b272c04682c27519feaa35c9e7441fc903871a8
>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/D 24 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 23{/.notdef}rp /C /D /.notdef 
/F 2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 
13{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
608.69 1673.52 mo
(Denormalization )
[-37.8003 -30.1803 -32.2201 -32.2797 -21.2998 -48.7802 -29.6403 -14.7601 -14.7601 -23.8202 -29.6401 -20.8201 
-14.7601 -32.2797 -32.2201 0 ]ysh
8 lw
4617.9 1471.92 mo
4447.58 1466.4 li
1 /0 /CSD get_res sepcs
1 sep
@
4429.05 1465.79 mo
4438.34 1465.56 4447.12 1461.52 4453.34 1454.62 cv
4449.34 1462.02 4449.05 1470.88 4452.57 1478.52 cv
4446.8 1471.23 4438.3 1466.63 4429.05 1465.79 cv
cp
ef
4.25 lw
[29.75 21.25 ] 0 dsh
404.9 879.68 mo
4441.43 879.68 li
4441.43 20.13 li
404.9 20.13 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
2276.98 467.93 mo
( )sh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 818 28 <0001008d0000038c050e002c00aeb10102435558b11a27b80292400f0913
2013200009001a180d0f014c1aba01290026ffe8b60d014d26260619b8ff
e8b40b0f014c19b8012e40090d5127180b0f014c27b8012eb24006540018
3f1aed2b3fed2b12392f2bed2b012f2f1239392f2f10ed3230311bb61a18
0d0f014c1aba01290026ffe8b60d014d26260619b8ffe8b40b0f014c19b8
012e40090d5127180b0f014c27b8012eb240065400183f1aed2b3fed2b12
392f2bed2b30315925140e0223212226351134363321321e0215140e0223
211121321e0215140e0223211121321e02038c050a0f09fd76212d2d2102
86090e0a05050a0e09fe320187090f0a05050a0f09fe7901d2090f0a0567
1d27180b272c04682c270a19271e1c27180bfec40b17271c1d26170afe93
0b182700>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/E 28 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 23{/.notdef}rp /C /D /E 
/F 2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 
13{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
436.87 94.7 mo
(Encoder)
[29.2804 32.2202 25.08 32.2797 32.2202 30.1804 0 ]xsh
459.47 1859.58 mo
4476.16 1859.58 li
4476.16 1000.03 li
459.47 1000.03 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
2331.53 1447.9 mo
( )sh
EJZYNT+Calibri-Bold*1 [60 0 0 -60 0 0 ]msf
544.85 1086.94 mo
(Decoder)
[37.8003 30.1804 25.08 32.2797 32.2202 30.1804 0 ]xsh
796.25 828 mo
963.33 828 li
978.98 828 991.68 815.31 991.68 799.65 cv
991.68 147.68 li
991.68 132.03 978.98 119.34 963.33 119.34 cv
796.25 119.34 li
780.6 119.34 767.91 132.03 767.91 147.68 cv
767.91 799.65 li
767.91 815.31 780.6 828 796.25 828 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
[] 0 dsh
796.25 828 mo
963.33 828 li
978.98 828 991.68 815.31 991.68 799.65 cv
991.68 147.68 li
991.68 132.03 978.98 119.34 963.33 119.34 cv
796.25 119.34 li
780.6 119.34 767.91 132.03 767.91 147.68 cv
767.91 799.65 li
767.91 815.31 780.6 828 796.25 828 cv
cp
.869291 .537774 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
5 314 1006 <00010058000003bc0525003e0110b10102435558400e042c01042b01093a
010939010b40b8ffc0b60f024d00400116b802eeb633253325330039ba02
ee000bffea400a0f024d000b010f030b2ab80169b61138392020391bb8ff
e8b30b014d1bb8ffe8b40b0f014c1bb80169400d3316062e531039180b0f
014c39b80159b240065400183f1aed2b323f123939ed2b2b11392f123939
ed012f5f5e5d2bedcd39392f2f10ed30315d2b005e5d5d015d5d1b401304
2c01042b01093a010939010b0040010f032ab80169b61138392020391bb8
ffe8b30b014d1bb8ffe8b40b0f014c1bb80169400d3316062e531039180b
0f014c39b80159b240065400183f1aed2b323f123939ed2b2b11392f1239
39ed3031015f5e5d005e5d5d015d5d5925140e022321222e0235343e0237
373e0335342e0223220e0223222e0235343e0633321e0215140e02070721
321e0203bc050a100afd181620140906101914e043522e1115293e2a3b5b
452e0d090d080503060a194362764065976431184c8a729701fe0a110c06
6b1d291a0b08172c23212f252315f046735f5024213b2c191e251f0c1c2f
22171f171118252318335b7d483f7a8dab719b0c1929>EJZYNT+Calibri-Bold AddT42Char 
4 9820 855 <000200a0fff301ba03af00130027001bb10014b802b8b70a1e23194c050f
48003fcd3fcd012f33ed32303101140e0223222e0235343e0233321e0211
140e0223222e0235343e0233321e0201ba0e2136292936210c0c21362929
36210e0e2136292936210c0c2136292936210e03162a38240f0f24382a2b
3a241010243afd482a39240f0f24392a2a3b240f0f243b00>EJZYNT+Calibri-Bold AddT42Char 
4 4798 448 <00010016fffa03b303c6002c004eb10102435558b210211fb80284b41521
062123b8025d400b0040212849210b1a490b4c00183f3f12393f01192f1a
18dded123910dded123930311bb72849210b1a490b4c00183f3f12393f30
315901140e0207010e0323222e0227012e0235343e0233321e0217131737
133e0333321e0203b301030504fef405112743363543261105fef4060701
0b1c312529321d0c04cb0606c8030d1c2f26252f1a0a039f050e11160efc
d911150c04050c1510032714200e060a0f0a040509110cfd711919028f0c
110905040a0f>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/two 1006 def
/colon 855 def
/v 448 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 50 /two put
dup 58 /colon put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus 6{/.notdef}rp /two 7{/.notdef}rp /colon 
8{/.notdef}rp /C /D /E /F 2{/.notdef}rp /I 4{/.notdef}rp 
/N 3{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef /c 
/d /e /f /g /h /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
/v 3{/.notdef}rp /z 133{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
898.82 763.68 mo
(Conv2d: )
[-31.7404 -32.2798 -32.2201 -28.3805 -30.4202 -32.2202 -16.5601 0 ]ysh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
4 10056 894 <0001006bfe9f021c059000230022bf001a01fa0000001001f90006000302
74b3151f0b85003f2f012ffdd6edd6ed3031010602151412171614060623
222e02272e0335343e02373e0333321e0202175456575206162d281c281b
0f033650351a1b364f35020c182920242e18030558c3fe61dadbfe63c610
17100804070b0768d3d7db7170dbd7d46905080703070e16>EJZYNT+Calibri-Bold AddT42Char 
4 10200 895 <00010061fe9f0212059000210024b900000273b2121505bb01fa000f001f
01fbb3151a0a85003f2f012fedd6ed10d6ed303101140e02070e03232226
263437361235340227263e0233321e0217161202121a354f36030f1b281c
292d1606535756550503192d251f281a0b03686c021a71dbd7d368070b07
0408101710c4019fdbda019fc30d160e0703070805d2fe53>EJZYNT+Calibri-Bold AddT42Char 
5 1302 1009 <00010060ffe903b0050e003e00e6b10102435558b70536010535010b40b8
ffc0b60f024d00400137b8020cb5283228320e1dba02c40000ffe0400b0f
024d00000e010f030e3ab80125b322220536b8ffe8b40b0f014c36b80164
b22c5109b80162b71318180b0f014c18b80156b240055600183f1afd2bd4
ed3fed2b12392fed012f5f5e5dd42bed1239392f2fed30315d2b005e5d5d
1b40132a36012a37010536010535010b0040010f033ab80125b322220536
b8ffe8b40b0f014c36b80164b22c5109b80162b71318180b0f014c18b801
56b240055600183f1afd2bd4ed3fed2b12392fed3031015f5e5d005e5d5d
015d5d5901140e0223222e0635343e0233321e0233323e0235342e022322
06232226351134363321321e02151406232111363633321e0203b04985bb
723c6c56371108050204090c080a294360433a5f42241e4066493a5f2a1d
191f22026509100b051514fe3423452669a36f3a01a469a5713c0f17170f
1219261a1c27180a171c1718355038304b341a0c1d27023228230c1a2b1e
3c36feeb0402315f8d00>EJZYNT+Calibri-Bold AddT42Char 
4 12998 970 <00020054ffe903d005240034004800e2b10102435558b9004affc0b70f02
4d004a012b3fb802abb40c1c1c0c35ba02810000ffe0400e0f024d000001
00000c010f030c3ab8ffe8b40b0f014c3ab8013eb330300526b8fff0b30b
014d26b8ffe8b40b0f014c26b8013f4009135944180b0f014c44b80140b2
40055f00183f1aed2b3fed2b2b12392fed2b012f5f5e5dd45d2bed12392f
10ed3230315d2b1bb5004a010f033ab8ffe8b40b0f014c3ab8013eb33030
0526b8fff0b30b014d26b8ffe8b40b0f014c26b8013f4009135944180b0f
014c44b80140b240055f00183f1aed2b3fed2b2b12392fed2b3031015f5e
5d5901140e0223222e0435343e0433321e0615140e0223222e0223220e02
073e0333321e0205342e0223220e0207141e0233323e0203d03c74aa6f5a
86623e250e0f2b4e7baf78264d422e0f08050203080e0a0c263649305170
4620011639434e2c628c592afefe1228422f1c36343015182f472f2e452e
1801b062a77945294d6e8aa25b4ca6a0916d40090e120d10131c141f2917
0a0d100c3c67884c0e1c140d36648e70334d351b0a12190e6b8f5423223e
5300>EJZYNT+Calibri-Bold AddT42Char 
5 1702 1010 <ffff0054ffe903d00524020603ca0000>EJZYNT+Calibri-Bold AddT42Char 
5 4778 1087 <00010054009703a803ec00310020400d1900162e041d16250d2922091100
2f33c4323939012fc4d4c412393930310101161615140e02232226270101
060623222e023534370101262635343e023332170101363633321e021514
06070283011507061b25280d080d06fee9feea061009122923170c0118fe
eb05081b25280e0f0c01170115060f0a122a231705070241feec07100812
2a231807050118feec06071b25280d0f0c01170116061008132923180dfe
e8011506071c25270d060f06>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/parenleft 894 def
/parenright 895 def
/five 1009 def
/six 1010 def
/multiply 1087 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 53 /five put
dup 54 /six put
dup 215 /multiply put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 6{/.notdef}rp 
/two 2{/.notdef}rp /five /six 3{/.notdef}rp /colon 8{/.notdef}rp /C 
/D /E /F 2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp 
/R /S 13{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o 2{/.notdef}rp /r /s /t /u /v 3{/.notdef}rp 
/z 92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
898.82 546.34 mo
(5\3275\327256 + S\(2\))
[-30.4203 -29.88 -30.4203 -29.88 -30.4203 -30.4202 -30.4202 -13.5599 -29.88 -13.5599 -28.3805 -18.7197 
-30.4202 0 ]ysh
1056.02 828 mo
1154.1 828 li
1169.75 828 1182.44 815.31 1182.44 799.65 cv
1182.44 147.68 li
1182.44 132.03 1169.75 119.34 1154.1 119.34 cv
1056.02 119.34 li
1040.37 119.34 1027.68 132.03 1027.68 147.68 cv
1027.68 799.65 li
1027.68 815.31 1040.37 828 1056.02 828 cv
cp
.00204471 .260136 1 0 cmyk
ef
1056.02 828 mo
1154.1 828 li
1169.75 828 1182.44 815.31 1182.44 799.65 cv
1182.44 147.68 li
1182.44 132.03 1169.75 119.34 1154.1 119.34 cv
1056.02 119.34 li
1040.37 119.34 1027.68 132.03 1027.68 147.68 cv
1027.68 799.65 li
1027.68 815.31 1040.37 828 1056.02 828 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 1422 39 <00010049ffea049b0524003f00d9b10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1aed2b3ffd2bd4ed1112
392fed2b2b2b012fedd4c4ed12392f30311bb90018ffe8b30f014d18b8ff
e8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f0005000a
ffe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f5600
183f1aed2b3ffd2bd4ed1112392fed2b2b2b30315901140e0223222e0223
220e0215141e02333236371123222635343e023321321e021511140e0423
222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a955a
2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0f999
548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d361c
26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/G 39 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 71 /G put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 6{/.notdef}rp 
/two 2{/.notdef}rp /five /six 3{/.notdef}rp /colon 8{/.notdef}rp /C 
/D /E /F /G /.notdef /I 4{/.notdef}rp /N 
3{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r /s /t /u /v 
3{/.notdef}rp /z 92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64106e-06 -60.024 -60.024 2.64105e-06 0 0 ]msf
1123.08 531.48 mo
(GDN)
[-38.2349 -37.8154 0 ]ysh
1246.79 828 mo
1379.09 828 li
1394.75 828 1407.44 815.31 1407.44 799.65 cv
1407.44 147.68 li
1407.44 132.03 1394.75 119.34 1379.09 119.34 cv
1246.79 119.34 li
1231.14 119.34 1218.45 132.03 1218.45 147.68 cv
1218.45 799.65 li
1218.45 815.31 1231.14 828 1246.79 828 cv
cp
.690364 .932311 0 0 cmyk
ef
1246.79 828 mo
1379.09 828 li
1394.75 828 1407.44 815.31 1407.44 799.65 cv
1407.44 147.68 li
1407.44 132.03 1394.75 119.34 1379.09 119.34 cv
1246.79 119.34 li
1231.14 119.34 1218.45 132.03 1218.45 147.68 cv
1218.45 799.65 li
1218.45 815.31 1231.14 828 1246.79 828 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 1920 62 <0001008d000003540514001a0049b10102435558b900150294400b00090f
5215180b0f014c15b8015db240065400183f1aed2b3f012fcded30311b40
090f5215180b0f014c15b8015db240065400183f1aed2b3f30315925140e
02232122263511343e0233321e02151121321e020354050a0f0afdaf212d
0d1e332627321e0d01970a0f0a056e1e291b0c272c04970a100a06060a10
0afbef0b1929>EJZYNT+Calibri-Bold AddT42Char 
3 2820 87 <0002008dfffa0403050e001c0029007eb10102435558b12406bb02930011
001d02c14009001125180b0f014c25b8012bb306060c23b8ffe8b40b0f01
4c23b8012bb44015510c5500183f3f1aed2b12392fed2b012fd4ed10ed32
30311bb625180b0f014c25b8012bb306060c23b8ffe8b40b0f014c23b801
2bb44015510c5500183f3f1aed2b12392fed2b30315901140e0223231114
0e0223222e02351134363321321e0405342e0223231133323e0204034482
bd806c0d1e322726331e0c312801312e537477542cfeed30464d2970763f
55361c03856da8733cfe630a100a06060a100a048c2f2f07173e5f7f6244
582a0bfe49223d55>EJZYNT+Calibri-Bold AddT42Char 
3 3982 104 <0001008cffe904ad0514002b0055b10102435558bc002002900000001602
93400c0a265210521b180b0f014c1bb8015cb240055600183f1aed2b3f3f
012fedd4ed30311b400b265210521b180b0f014c1bb8015cb24005560018
3f1aed2b3f3f30315901140e0223222e023511343e0233321e021511141e
0233323e023511343e0233321e021504ad4688c8827ac286470c1f322726
321e0d2647633d3e6244250c1e332626311e0c01e277bc82443d7cb97c03
130a100a06060a100afd044d714a2526496b44030b0a100a06060a100a00
>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/L 62 def
/P 87 def
/U 104 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 76 /L put
dup 80 /P put
dup 85 /U put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 6{/.notdef}rp 
/two 2{/.notdef}rp /five /six 3{/.notdef}rp /colon 8{/.notdef}rp /C 
/D /E /F /G /.notdef /I 2{/.notdef}rp /L 
/.notdef /N /.notdef /P /.notdef /R /S /.notdef 
/U 11{/.notdef}rp /a /.notdef /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
2{/.notdef}rp /r /s /t /u /v 3{/.notdef}rp /z 
92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1330.97 553.92 mo
(PReLU)
[-31.9198 -33.7803 -30.1804 -25.3801 0 ]ysh
8 lw
1027.68 473.67 mo
991.68 473.67 li
1 /0 /CSD get_res sepcs
1 sep
@
1218.45 473.67 mo
1182.44 473.67 li
@
1473.34 473.67 mo
1407.44 473.67 li
@
1491.88 473.67 mo
1482.6 474.21 1473.95 478.53 1467.96 485.63 cv
1471.72 478.1 1471.72 469.24 1467.96 461.71 cv
1473.95 468.81 1482.6 473.13 1491.88 473.67 cv
cp
ef
1520.23 829.18 mo
1687.3 829.18 li
1702.96 829.18 1715.65 816.49 1715.65 800.84 cv
1715.65 148.87 li
1715.65 133.21 1702.96 120.52 1687.3 120.52 cv
1520.23 120.52 li
1504.57 120.52 1491.88 133.21 1491.88 148.87 cv
1491.88 800.84 li
1491.88 816.49 1504.57 829.18 1520.23 829.18 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
1520.23 829.18 mo
1687.3 829.18 li
1702.96 829.18 1715.65 816.49 1715.65 800.84 cv
1715.65 148.87 li
1715.65 133.21 1702.96 120.52 1687.3 120.52 cv
1520.23 120.52 li
1504.57 120.52 1491.88 133.21 1491.88 148.87 cv
1491.88 800.84 li
1491.88 816.49 1504.57 829.18 1520.23 829.18 cv
cp
.869291 .537774 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1622.81 764.86 mo
(Conv2d: )
[-31.7404 -32.2798 -32.2201 -28.3805 -30.4202 -32.2202 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1622.81 547.54 mo
(5\3275\327256 + S\(2\))
[-30.4202 -29.8801 -30.4202 -29.8801 -30.4202 -30.4203 -30.4203 -13.5598 -29.8801 -13.5598 -28.3804 -18.7198 
-30.4203 0 ]ysh
1780 829.18 mo
1878.07 829.18 li
1893.73 829.18 1906.42 816.49 1906.42 800.84 cv
1906.42 148.87 li
1906.42 133.21 1893.73 120.52 1878.07 120.52 cv
1780 120.52 li
1764.34 120.52 1751.65 133.21 1751.65 148.87 cv
1751.65 800.84 li
1751.65 816.49 1764.34 829.18 1780 829.18 cv
cp
.00204471 .260136 1 0 cmyk
ef
1780 829.18 mo
1878.07 829.18 li
1893.73 829.18 1906.42 816.49 1906.42 800.84 cv
1906.42 148.87 li
1906.42 133.21 1893.73 120.52 1878.07 120.52 cv
1780 120.52 li
1764.34 120.52 1751.65 133.21 1751.65 148.87 cv
1751.65 800.84 li
1751.65 816.49 1764.34 829.18 1780 829.18 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1847.09 532.68 mo
(GDN)
[-38.2196 -37.8003 0 ]ysh
1970.77 829.18 mo
2103.07 829.18 li
2118.72 829.18 2131.41 816.49 2131.41 800.84 cv
2131.41 148.87 li
2131.41 133.21 2118.72 120.52 2103.07 120.52 cv
1970.77 120.52 li
1955.11 120.52 1942.42 133.21 1942.42 148.87 cv
1942.42 800.84 li
1942.42 816.49 1955.11 829.18 1970.77 829.18 cv
cp
.690364 .932311 0 0 cmyk
ef
1970.77 829.18 mo
2103.07 829.18 li
2118.72 829.18 2131.41 816.49 2131.41 800.84 cv
2131.41 148.87 li
2131.41 133.21 2118.72 120.52 2103.07 120.52 cv
1970.77 120.52 li
1955.11 120.52 1942.42 133.21 1942.42 148.87 cv
1942.42 800.84 li
1942.42 816.49 1955.11 829.18 1970.77 829.18 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2054.98 555.12 mo
(PReLU)
[-31.9198 -33.7803 -30.1804 -25.3801 0 ]ysh
8 lw
1751.65 474.85 mo
1715.65 474.85 li
1 /0 /CSD get_res sepcs
1 sep
@
1942.42 474.85 mo
1906.42 474.85 li
@
2196.18 473.93 mo
2131.41 474.85 li
@
2214.71 473.67 mo
2205.45 474.34 2196.86 478.78 2190.97 485.97 cv
2194.62 478.39 2194.5 469.52 2190.63 462.05 cv
2196.72 469.06 2205.43 473.26 2214.71 473.67 cv
cp
ef
2243.06 829.18 mo
2410.14 829.18 li
2425.79 829.18 2438.48 816.49 2438.48 800.84 cv
2438.48 148.87 li
2438.48 133.21 2425.79 120.52 2410.14 120.52 cv
2243.06 120.52 li
2227.4 120.52 2214.71 133.21 2214.71 148.87 cv
2214.71 800.84 li
2214.71 816.49 2227.4 829.18 2243.06 829.18 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
2243.06 829.18 mo
2410.14 829.18 li
2425.79 829.18 2438.48 816.49 2438.48 800.84 cv
2438.48 148.87 li
2438.48 133.21 2425.79 120.52 2410.14 120.52 cv
2243.06 120.52 li
2227.4 120.52 2214.71 133.21 2214.71 148.87 cv
2214.71 800.84 li
2214.71 816.49 2227.4 829.18 2243.06 829.18 cv
cp
.869291 .537774 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2345.66 764.86 mo
(Conv2d: )
[-31.7404 -32.2798 -32.2201 -28.3805 -30.4202 -32.2202 -16.5601 0 ]ysh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
5 0 1005 <00010094000003b00517002e00b3b10102435558400d0929010928010827
0101120130b8ffc040090f024d403001030029b80292b31e180b11b8ffde
b50f024d111312b8017d40092352290f10010b0510b8012bb24006540018
3f1aed5f5e5d323ffdcd012f2bcdc433fdcd30315f5d2b005d015d5d5d1b
4018292801292901092901092801082701011201403001031312b8017d40
092352290f10010b0510b8012bb240065400183f1aed5f5e5d323ffdcd30
31015f5d005d015d5d5d5d5d5925140e022321222e0235343e0233331107
0606262635343e0237253e0333321e02151133321e0203b0060b0e09fd36
080e0b06050b0e09f1d0171d110602080e0c0116050f18271f262f1808d3
090f0b05641c27170a0a17271c1d27180b034a730b05112a26181f160e08
b40405030103070c09fbd30b1827>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/one 1005 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 2{/.notdef}rp /five /six 3{/.notdef}rp /colon 8{/.notdef}rp 
/C /D /E /F /G /.notdef /I 2{/.notdef}rp 
/L /.notdef /N /.notdef /P /.notdef /R /S 
/.notdef /U 11{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o 2{/.notdef}rp /r /s /t /u /v 3{/.notdef}rp 
/z 92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2345.66 547.54 mo
(5\3275\327256 + S\(1\))
[-30.4202 -29.8801 -30.4202 -29.8801 -30.4202 -30.4203 -30.4203 -13.5598 -29.8801 -13.5598 -28.3804 -18.7198 
-30.4203 0 ]ysh
2502.83 829.18 mo
2600.91 829.18 li
2616.56 829.18 2629.25 816.49 2629.25 800.84 cv
2629.25 148.87 li
2629.25 133.21 2616.56 120.52 2600.91 120.52 cv
2502.83 120.52 li
2487.18 120.52 2474.49 133.21 2474.49 148.87 cv
2474.49 800.84 li
2474.49 816.49 2487.18 829.18 2502.83 829.18 cv
cp
.00204471 .260136 1 0 cmyk
ef
2502.83 829.18 mo
2600.91 829.18 li
2616.56 829.18 2629.25 816.49 2629.25 800.84 cv
2629.25 148.87 li
2629.25 133.21 2616.56 120.52 2600.91 120.52 cv
2502.83 120.52 li
2487.18 120.52 2474.49 133.21 2474.49 148.87 cv
2474.49 800.84 li
2474.49 816.49 2487.18 829.18 2502.83 829.18 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2569.94 532.68 mo
(GDN)
[-38.2196 -37.8003 0 ]ysh
2693.6 829.18 mo
2825.9 829.18 li
2841.56 829.18 2854.25 816.49 2854.25 800.84 cv
2854.25 148.87 li
2854.25 133.21 2841.56 120.52 2825.9 120.52 cv
2693.6 120.52 li
2677.95 120.52 2665.26 133.21 2665.26 148.87 cv
2665.26 800.84 li
2665.26 816.49 2677.95 829.18 2693.6 829.18 cv
cp
.690364 .932311 0 0 cmyk
ef
2693.6 829.18 mo
2825.9 829.18 li
2841.56 829.18 2854.25 816.49 2854.25 800.84 cv
2854.25 148.87 li
2854.25 133.21 2841.56 120.52 2825.9 120.52 cv
2693.6 120.52 li
2677.95 120.52 2665.26 133.21 2665.26 148.87 cv
2665.26 800.84 li
2665.26 816.49 2677.95 829.18 2693.6 829.18 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2777.83 555.12 mo
(PReLU)
[-31.9198 -33.7803 -30.1804 -25.3801 0 ]ysh
8 lw
2474.49 474.85 mo
2438.48 474.85 li
1 /0 /CSD get_res sepcs
1 sep
@
2665.26 474.85 mo
2629.25 474.85 li
@
3668.68 828 mo
3835.75 828 li
3851.41 828 3864.1 815.31 3864.1 799.65 cv
3864.1 147.68 li
3864.1 132.03 3851.41 119.34 3835.75 119.34 cv
3668.68 119.34 li
3653.02 119.34 3640.33 132.03 3640.33 147.68 cv
3640.33 799.65 li
3640.33 815.31 3653.02 828 3668.68 828 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
3668.68 828 mo
3835.75 828 li
3851.41 828 3864.1 815.31 3864.1 799.65 cv
3864.1 147.68 li
3864.1 132.03 3851.41 119.34 3835.75 119.34 cv
3668.68 119.34 li
3653.02 119.34 3640.33 132.03 3640.33 147.68 cv
3640.33 799.65 li
3640.33 815.31 3653.02 828 3668.68 828 cv
cp
.869291 .537774 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64106e-06 -60.024 -60.024 2.64105e-06 0 0 ]msf
3771.31 801.07 mo
(Conv2d: )
[-31.7532 -32.2925 -32.233 -28.3918 -30.4324 -32.233 -16.5667 0 ]ysh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
5 756 1007 <00010055ffe903b605250058013fb10102435558b70847010a46010b5ab8
ffc0b60f024d005a0131b802c9400d4e53264e40264e4e2640030e1bba02
e90000ffe8b40f024d000eb8ffe8400a0f024d000e010f030e45bb015600
3b0009015eb6113b113b111636b8ffe8b30b014d36b8ffe8b40b0f014c36
b80155b249532cb801044011202005495316180b014d16180b0f014c16b8
0156b240055600183f1aed2b2b3f12392fed3910ed2b2b1139392f2f10ed
10ed012f5f5e5d2bd42bed1217392f2f2f11123910ed30315d2b005e5d5d
1b400d0847010a46010b005a010f0345bb0156003b0009015eb6113b113b
111636b8ffe8b30b014d36b8ffe8b40b0f014c36b80155b249532cb80104
4011202005495316180b014d16180b0f014c16b80156b240055600183f1a
ed2b2b3f12392fed3910ed2b2b1139392f2f10ed10ed3031015f5e5d005e
5d5d5901140e0223222e0635343633321e0233323e0235342e022323222e
0235343e023333323e0235342e0223220e0223222e0235343e0633321e02
15140e0207151e0303b64a84b86d4274593a1209070310100a314c664137
543b1d23456947700d120c05050b110c713a5a3d20162b442e345c49330c
080c0804020609143e5e7b485e9163331e3a5739446c4b28017b61966635
131c1e10141b291d30251b1f1b1a2f43292d48331c0716271f1d2514081b
32472b213b2b191f25200714261e19211610132624192c53794c3b665038
0e0308355065>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/three 1007 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two /three /.notdef /five /six 3{/.notdef}rp /colon 
8{/.notdef}rp /C /D /E /F /G /.notdef /I 
2{/.notdef}rp /L /.notdef /N /.notdef /P /.notdef /R 
/S /.notdef /U 11{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r /s /t /u /v 
3{/.notdef}rp /z 92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64106e-06 -60.024 -60.024 2.64105e-06 0 0 ]msf
3771.31 583.75 mo
(5\3275\327\(32\327n)
[-30.4324 -29.8921 -30.4324 -29.892 -18.7273 -30.4324 -30.2523 -29.8921 0 ]ysh
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
3 3794 100 <0001000cfffa03ea050e00220053b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1aed2b32012fc4
fdcd30311bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f
1aed2b3230315901140e02232111140e0223222e02351121222e0235343e
023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05050a
0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19291d
1e2a190b0b192a00>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/T 100 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two /three /.notdef /five /six 3{/.notdef}rp /colon 
8{/.notdef}rp /C /D /E /F /G /.notdef /I 
2{/.notdef}rp /L /.notdef /N /.notdef /P /.notdef /R 
/S /T /U 11{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r /s /t /u /v 
3{/.notdef}rp /z 92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-1.716e-06 -39 -39 1.716e-06 0 0 ]msf
3772.51 321.55 mo
(T)sh
EJZYNT+Calibri-Bold*1 [-2.64106e-06 -60.024 -60.024 2.64105e-06 0 0 ]msf
3771.31 302.23 mo
(\)+ S\(1\))
[-18.7273 -29.892 -13.5653 -28.3918 -18.7273 -30.4324 0 ]ysh
3938.46 828 mo
4036.53 828 li
4052.18 828 4064.88 815.31 4064.88 799.65 cv
4064.88 147.68 li
4064.88 132.03 4052.18 119.34 4036.53 119.34 cv
3938.46 119.34 li
3922.8 119.34 3910.11 132.03 3910.11 147.68 cv
3910.11 799.65 li
3910.11 815.31 3922.8 828 3938.46 828 cv
cp
.00204471 .260136 1 0 cmyk
ef
3938.46 828 mo
4036.53 828 li
4052.18 828 4064.88 815.31 4064.88 799.65 cv
4064.88 147.68 li
4064.88 132.03 4052.18 119.34 4036.53 119.34 cv
3938.46 119.34 li
3922.8 119.34 3910.11 132.03 3910.11 147.68 cv
3910.11 799.65 li
3910.11 815.31 3922.8 828 3938.46 828 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4005.6 531.48 mo
(GDN)
[-38.2196 -37.8003 0 ]ysh
8 lw
3910.11 473.67 mo
3864.1 473.67 li
@
3127.47 437.44 mo
3024.33 437.44 li
@
3146.01 437.44 mo
3136.73 437.97 3128.08 442.3 3122.09 449.4 cv
3125.85 441.87 3125.85 433 3122.09 425.48 cv
3128.08 432.57 3136.73 436.9 3146.01 437.44 cv
cp
ef
2960.02 828 mo
3127.09 828 li
3142.75 828 3155.44 815.31 3155.44 799.65 cv
3155.44 147.68 li
3155.44 132.03 3142.75 119.34 3127.09 119.34 cv
2960.02 119.34 li
2944.36 119.34 2931.67 132.03 2931.67 147.68 cv
2931.67 799.65 li
2931.67 815.31 2944.36 828 2960.02 828 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
2960.02 828 mo
3127.09 828 li
3142.75 828 3155.44 815.31 3155.44 799.65 cv
3155.44 147.68 li
3155.44 132.03 3142.75 119.34 3127.09 119.34 cv
2960.02 119.34 li
2944.36 119.34 2931.67 132.03 2931.67 147.68 cv
2931.67 799.65 li
2931.67 815.31 2944.36 828 2960.02 828 cv
cp
.869291 .537774 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3062.64 763.68 mo
(Conv2d: )
[-31.7404 -32.2798 -32.2201 -28.3805 -30.4202 -32.2202 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3062.64 546.34 mo
(5\3275\327256 + S\(1\))
[-30.4203 -29.88 -30.4203 -29.88 -30.4203 -30.4202 -30.4202 -13.5599 -29.88 -13.5599 -28.3805 -18.7197 
-30.4202 0 ]ysh
3219.79 828 mo
3317.86 828 li
3333.52 828 3346.21 815.31 3346.21 799.65 cv
3346.21 147.68 li
3346.21 132.03 3333.52 119.34 3317.86 119.34 cv
3219.79 119.34 li
3204.13 119.34 3191.44 132.03 3191.44 147.68 cv
3191.44 799.65 li
3191.44 815.31 3204.13 828 3219.79 828 cv
cp
.00204471 .260136 1 0 cmyk
ef
3219.79 828 mo
3317.86 828 li
3333.52 828 3346.21 815.31 3346.21 799.65 cv
3346.21 147.68 li
3346.21 132.03 3333.52 119.34 3317.86 119.34 cv
3219.79 119.34 li
3204.13 119.34 3191.44 132.03 3191.44 147.68 cv
3191.44 799.65 li
3191.44 815.31 3204.13 828 3219.79 828 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3286.92 531.48 mo
(GDN)
[-38.2196 -37.8003 0 ]ysh
3410.56 828 mo
3542.86 828 li
3558.51 828 3571.2 815.31 3571.2 799.65 cv
3571.2 147.68 li
3571.2 132.03 3558.51 119.34 3542.86 119.34 cv
3410.56 119.34 li
3394.9 119.34 3382.21 132.03 3382.21 147.68 cv
3382.21 799.65 li
3382.21 815.31 3394.9 828 3410.56 828 cv
cp
.690364 .932311 0 0 cmyk
ef
3410.56 828 mo
3542.86 828 li
3558.51 828 3571.2 815.31 3571.2 799.65 cv
3571.2 147.68 li
3571.2 132.03 3558.51 119.34 3542.86 119.34 cv
3410.56 119.34 li
3394.9 119.34 3382.21 132.03 3382.21 147.68 cv
3382.21 799.65 li
3382.21 815.31 3394.9 828 3410.56 828 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3494.81 553.92 mo
(PReLU)
[-31.9198 -33.7803 -30.1804 -25.3801 0 ]ysh
8 lw
3191.44 473.67 mo
3155.44 473.67 li
1 /0 /CSD get_res sepcs
1 sep
@
3382.21 473.67 mo
3346.21 473.67 li
@
2913.13 473.95 mo
2854.25 474.85 li
@
2931.67 473.67 mo
2922.4 474.35 2913.82 478.8 2907.94 485.99 cv
2911.58 478.41 2911.45 469.55 2907.57 462.08 cv
2913.67 469.08 2922.39 473.27 2931.67 473.67 cv
cp
ef
3621.79 473.67 mo
3571.2 473.67 li
@
3640.33 473.67 mo
3631.05 474.21 3622.41 478.53 3616.41 485.63 cv
3620.18 478.1 3620.18 469.24 3616.41 461.71 cv
3622.41 468.81 3631.05 473.13 3640.33 473.67 cv
cp
ef
4947.85 1319.99 mo
4947.85 1471.92 li
4617.9 1471.92 li
@
4011.28 1820.13 mo
4178.35 1820.13 li
4194.01 1820.13 4206.7 1807.43 4206.7 1791.78 cv
4206.7 1139.81 li
4206.7 1124.15 4194.01 1111.46 4178.35 1111.46 cv
4011.28 1111.46 li
3995.62 1111.46 3982.93 1124.15 3982.93 1139.81 cv
3982.93 1791.78 li
3982.93 1807.43 3995.62 1820.13 4011.28 1820.13 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
4011.28 1820.13 mo
4178.35 1820.13 li
4194.01 1820.13 4206.7 1807.43 4206.7 1791.78 cv
4206.7 1139.81 li
4206.7 1124.15 4194.01 1111.46 4178.35 1111.46 cv
4011.28 1111.46 li
3995.62 1111.46 3982.93 1124.15 3982.93 1139.81 cv
3982.93 1791.78 li
3982.93 1807.43 3995.62 1820.13 4011.28 1820.13 cv
cp
.869291 .537774 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4114.1 1771.9 mo
(Conv2dT: )
[-31.7404 -32.2797 -32.2202 -28.3804 -30.4202 -32.2202 -29.6997 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4114.1 1524.86 mo
(5\3275\327256 + S\(1\))
[-30.4203 -29.88 -30.4203 -29.88 -30.4203 -30.4202 -30.4202 -13.5599 -29.88 -13.5599 -28.3804 -18.7198 
-30.4202 0 ]ysh
3811.35 1821.31 mo
3924.74 1821.31 li
3940.39 1821.31 3953.08 1808.62 3953.08 1792.96 cv
3953.08 1141 li
3953.08 1125.34 3940.39 1112.65 3924.74 1112.65 cv
3811.35 1112.65 li
3795.69 1112.65 3783 1125.34 3783 1141 cv
3783 1792.96 li
3783 1808.62 3795.69 1821.31 3811.35 1821.31 cv
cp
.00204471 .260136 1 0 cmyk
ef
3811.35 1821.31 mo
3924.74 1821.31 li
3940.39 1821.31 3953.08 1808.62 3953.08 1792.96 cv
3953.08 1141 li
3953.08 1125.34 3940.39 1112.65 3924.74 1112.65 cv
3811.35 1112.65 li
3795.69 1112.65 3783 1125.34 3783 1141 cv
3783 1792.96 li
3783 1808.62 3795.69 1821.31 3811.35 1821.31 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3886.15 1532.86 mo
(IGDN)
[-16.0199 -38.2196 -37.8003 0 ]ysh
3612.92 1821.31 mo
3726.31 1821.31 li
3741.97 1821.31 3754.66 1808.62 3754.66 1792.96 cv
3754.66 1141 li
3754.66 1125.34 3741.97 1112.65 3726.31 1112.65 cv
3612.92 1112.65 li
3597.27 1112.65 3584.58 1125.34 3584.58 1141 cv
3584.58 1792.96 li
3584.58 1808.62 3597.27 1821.31 3612.92 1821.31 cv
cp
.690364 .932311 0 0 cmyk
ef
3612.92 1821.31 mo
3726.31 1821.31 li
3741.97 1821.31 3754.66 1808.62 3754.66 1792.96 cv
3754.66 1141 li
3754.66 1125.34 3741.97 1112.65 3726.31 1112.65 cv
3612.92 1112.65 li
3597.27 1112.65 3584.58 1125.34 3584.58 1141 cv
3584.58 1792.96 li
3584.58 1808.62 3597.27 1821.31 3612.92 1821.31 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3687.72 1547.3 mo
(PReLU)
[-31.9198 -33.7803 -30.1803 -25.3802 0 ]ysh
8 lw
3953.08 1466.98 mo
3982.93 1465.79 li
1 /0 /CSD get_res sepcs
1 sep
@
3754.66 1466.98 mo
3783 1466.98 li
@
3304.12 1821.31 mo
3471.19 1821.31 li
3486.85 1821.31 3499.54 1808.62 3499.54 1792.96 cv
3499.54 1141 li
3499.54 1125.34 3486.85 1112.65 3471.19 1112.65 cv
3304.12 1112.65 li
3288.46 1112.65 3275.77 1125.34 3275.77 1141 cv
3275.77 1792.96 li
3275.77 1808.62 3288.46 1821.31 3304.12 1821.31 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
3304.12 1821.31 mo
3471.19 1821.31 li
3486.85 1821.31 3499.54 1808.62 3499.54 1792.96 cv
3499.54 1141 li
3499.54 1125.34 3486.85 1112.65 3471.19 1112.65 cv
3304.12 1112.65 li
3288.46 1112.65 3275.77 1125.34 3275.77 1141 cv
3275.77 1792.96 li
3275.77 1808.62 3288.46 1821.31 3304.12 1821.31 cv
cp
.869291 .537774 0 0 cmyk
@
3104.19 1822.49 mo
3217.58 1822.49 li
3233.23 1822.49 3245.92 1809.8 3245.92 1794.15 cv
3245.92 1142.18 li
3245.92 1126.53 3233.23 1113.83 3217.58 1113.83 cv
3104.19 1113.83 li
3088.53 1113.83 3075.84 1126.53 3075.84 1142.18 cv
3075.84 1794.15 li
3075.84 1809.8 3088.53 1822.49 3104.19 1822.49 cv
cp
.00204471 .260136 1 0 cmyk
ef
3104.19 1822.49 mo
3217.58 1822.49 li
3233.23 1822.49 3245.92 1809.8 3245.92 1794.15 cv
3245.92 1142.18 li
3245.92 1126.53 3233.23 1113.83 3217.58 1113.83 cv
3104.19 1113.83 li
3088.53 1113.83 3075.84 1126.53 3075.84 1142.18 cv
3075.84 1794.15 li
3075.84 1809.8 3088.53 1822.49 3104.19 1822.49 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3178.97 1534.03 mo
(IGDN)
[-16.0199 -38.2196 -37.8003 0 ]ysh
2905.76 1822.49 mo
3019.15 1822.49 li
3034.81 1822.49 3047.5 1809.8 3047.5 1794.15 cv
3047.5 1142.18 li
3047.5 1126.53 3034.81 1113.83 3019.15 1113.83 cv
2905.76 1113.83 li
2890.11 1113.83 2877.42 1126.53 2877.42 1142.18 cv
2877.42 1794.15 li
2877.42 1809.8 2890.11 1822.49 2905.76 1822.49 cv
cp
.690364 .932311 0 0 cmyk
ef
2905.76 1822.49 mo
3019.15 1822.49 li
3034.81 1822.49 3047.5 1809.8 3047.5 1794.15 cv
3047.5 1142.18 li
3047.5 1126.53 3034.81 1113.83 3019.15 1113.83 cv
2905.76 1113.83 li
2890.11 1113.83 2877.42 1126.53 2877.42 1142.18 cv
2877.42 1794.15 li
2877.42 1809.8 2890.11 1822.49 2905.76 1822.49 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2980.54 1548.48 mo
(PReLU)
[-31.9199 -33.7802 -30.1804 -25.3802 0 ]ysh
8 lw
3245.92 1468.16 mo
3275.77 1466.98 li
1 /0 /CSD get_res sepcs
1 sep
@
3047.5 1468.16 mo
3075.84 1468.16 li
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3405.43 1773.1 mo
(Conv2dT: )
[-31.7405 -32.2797 -32.2201 -28.3805 -30.4202 -32.2202 -29.6997 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
3405.43 1526.04 mo
(5\3275\327256 + S\(1\))
[-30.4202 -29.8801 -30.4202 -29.8801 -30.4202 -30.4202 -30.4203 -13.5598 -29.8801 -13.5598 -28.3805 -18.7197 
-30.4203 0 ]ysh
3518.08 1466.98 mo
3584.58 1466.98 li
1 /0 /CSD get_res sepcs
1 sep
@
3499.54 1466.98 mo
3508.82 1466.44 3517.46 1462.12 3523.46 1455.02 cv
3519.69 1462.55 3519.69 1471.41 3523.46 1478.94 cv
3517.46 1471.84 3508.82 1467.52 3499.54 1466.98 cv
cp
ef
2593.95 1819.53 mo
2761.03 1819.53 li
2776.69 1819.53 2789.38 1806.84 2789.38 1791.19 cv
2789.38 1139.22 li
2789.38 1123.56 2776.69 1110.87 2761.03 1110.87 cv
2593.95 1110.87 li
2578.3 1110.87 2565.61 1123.56 2565.61 1139.22 cv
2565.61 1791.19 li
2565.61 1806.84 2578.3 1819.53 2593.95 1819.53 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
2593.95 1819.53 mo
2761.03 1819.53 li
2776.69 1819.53 2789.38 1806.84 2789.38 1791.19 cv
2789.38 1139.22 li
2789.38 1123.56 2776.69 1110.87 2761.03 1110.87 cv
2593.95 1110.87 li
2578.3 1110.87 2565.61 1123.56 2565.61 1139.22 cv
2565.61 1791.19 li
2565.61 1806.84 2578.3 1819.53 2593.95 1819.53 cv
cp
.869291 .537774 0 0 cmyk
@
2394.03 1820.72 mo
2507.41 1820.72 li
2523.07 1820.72 2535.76 1808.03 2535.76 1792.37 cv
2535.76 1140.4 li
2535.76 1124.75 2523.07 1112.06 2507.41 1112.06 cv
2394.03 1112.06 li
2378.37 1112.06 2365.68 1124.75 2365.68 1140.4 cv
2365.68 1792.37 li
2365.68 1808.03 2378.37 1820.72 2394.03 1820.72 cv
cp
.00204471 .260136 1 0 cmyk
ef
2394.03 1820.72 mo
2507.41 1820.72 li
2523.07 1820.72 2535.76 1808.03 2535.76 1792.37 cv
2535.76 1140.4 li
2535.76 1124.75 2523.07 1112.06 2507.41 1112.06 cv
2394.03 1112.06 li
2378.37 1112.06 2365.68 1124.75 2365.68 1140.4 cv
2365.68 1792.37 li
2365.68 1808.03 2378.37 1820.72 2394.03 1820.72 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2468.78 1532.26 mo
(IGDN)
[-16.0199 -38.2196 -37.8003 0 ]ysh
2195.6 1820.72 mo
2308.99 1820.72 li
2324.64 1820.72 2337.33 1808.03 2337.33 1792.37 cv
2337.33 1140.4 li
2337.33 1124.75 2324.64 1112.06 2308.99 1112.06 cv
2195.6 1112.06 li
2179.95 1112.06 2167.26 1124.75 2167.26 1140.4 cv
2167.26 1792.37 li
2167.26 1808.03 2179.95 1820.72 2195.6 1820.72 cv
cp
.690364 .932311 0 0 cmyk
ef
2195.6 1820.72 mo
2308.99 1820.72 li
2324.64 1820.72 2337.33 1808.03 2337.33 1792.37 cv
2337.33 1140.4 li
2337.33 1124.75 2324.64 1112.06 2308.99 1112.06 cv
2195.6 1112.06 li
2179.95 1112.06 2167.26 1124.75 2167.26 1140.4 cv
2167.26 1792.37 li
2167.26 1808.03 2179.95 1820.72 2195.6 1820.72 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2270.35 1546.7 mo
(PReLU)
[-31.9198 -33.7803 -30.1803 -25.3802 0 ]ysh
8 lw
2535.76 1466.39 mo
2565.61 1465.2 li
1 /0 /CSD get_res sepcs
1 sep
@
2337.33 1466.39 mo
2365.68 1466.39 li
@
2807.91 1465.2 mo
2874.42 1465.2 li
@
2789.38 1465.2 mo
2798.65 1464.66 2807.3 1460.34 2813.3 1453.24 cv
2809.53 1460.77 2809.53 1469.63 2813.3 1477.16 cv
2807.3 1470.06 2798.65 1465.74 2789.38 1465.2 cv
cp
ef
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2696.74 1771.9 mo
(Conv2dT: )
[-31.7404 -32.2797 -32.2202 -28.3804 -30.4202 -32.2202 -29.6997 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
2696.74 1524.86 mo
(5\3275\327256 + S\(1\))
[-30.4203 -29.88 -30.4203 -29.88 -30.4203 -30.4202 -30.4202 -13.5599 -29.88 -13.5599 -28.3804 -18.7198 
-30.4202 0 ]ysh
1885.29 1819.58 mo
2052.37 1819.58 li
2068.02 1819.58 2080.72 1806.89 2080.72 1791.24 cv
2080.72 1139.27 li
2080.72 1123.61 2068.02 1110.92 2052.37 1110.92 cv
1885.29 1110.92 li
1869.64 1110.92 1856.95 1123.61 1856.95 1139.27 cv
1856.95 1791.24 li
1856.95 1806.89 1869.64 1819.58 1885.29 1819.58 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
1885.29 1819.58 mo
2052.37 1819.58 li
2068.02 1819.58 2080.72 1806.89 2080.72 1791.24 cv
2080.72 1139.27 li
2080.72 1123.61 2068.02 1110.92 2052.37 1110.92 cv
1885.29 1110.92 li
1869.64 1110.92 1856.95 1123.61 1856.95 1139.27 cv
1856.95 1791.24 li
1856.95 1806.89 1869.64 1819.58 1885.29 1819.58 cv
cp
.869291 .537774 0 0 cmyk
@
1685.37 1820.77 mo
1798.75 1820.77 li
1814.41 1820.77 1827.1 1808.08 1827.1 1792.42 cv
1827.1 1140.46 li
1827.1 1124.8 1814.41 1112.11 1798.75 1112.11 cv
1685.37 1112.11 li
1669.71 1112.11 1657.02 1124.8 1657.02 1140.46 cv
1657.02 1792.42 li
1657.02 1808.08 1669.71 1820.77 1685.37 1820.77 cv
cp
.00204471 .260136 1 0 cmyk
ef
1685.37 1820.77 mo
1798.75 1820.77 li
1814.41 1820.77 1827.1 1808.08 1827.1 1792.42 cv
1827.1 1140.46 li
1827.1 1124.8 1814.41 1112.11 1798.75 1112.11 cv
1685.37 1112.11 li
1669.71 1112.11 1657.02 1124.8 1657.02 1140.46 cv
1657.02 1792.42 li
1657.02 1808.08 1669.71 1820.77 1685.37 1820.77 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1760.11 1532.3 mo
(IGDN)
[-16.0199 -38.2196 -37.8003 0 ]ysh
1486.94 1820.77 mo
1600.33 1820.77 li
1615.98 1820.77 1628.67 1808.08 1628.67 1792.42 cv
1628.67 1140.46 li
1628.67 1124.8 1615.98 1112.11 1600.33 1112.11 cv
1486.94 1112.11 li
1471.29 1112.11 1458.59 1124.8 1458.59 1140.46 cv
1458.59 1792.42 li
1458.59 1808.08 1471.29 1820.77 1486.94 1820.77 cv
cp
.690364 .932311 0 0 cmyk
ef
1486.94 1820.77 mo
1600.33 1820.77 li
1615.98 1820.77 1628.67 1808.08 1628.67 1792.42 cv
1628.67 1140.46 li
1628.67 1124.8 1615.98 1112.11 1600.33 1112.11 cv
1486.94 1112.11 li
1471.29 1112.11 1458.59 1124.8 1458.59 1140.46 cv
1458.59 1792.42 li
1458.59 1808.08 1471.29 1820.77 1486.94 1820.77 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1561.68 1546.75 mo
(PReLU)
[-31.9199 -33.7802 -30.1804 -25.3802 0 ]ysh
8 lw
1827.1 1466.44 mo
1856.95 1465.25 li
1 /0 /CSD get_res sepcs
1 sep
@
1628.67 1466.44 mo
1657.02 1466.44 li
@
2099.25 1465.25 mo
2165.75 1465.25 li
@
2080.72 1465.25 mo
2089.99 1464.72 2098.64 1460.39 2104.64 1453.29 cv
2100.87 1460.82 2100.87 1469.69 2104.64 1477.21 cv
2098.64 1470.12 2089.99 1465.79 2080.72 1465.25 cv
cp
ef
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1988.06 1773.46 mo
(Conv2dT: )
[-31.7405 -32.2797 -32.2201 -28.3805 -30.4202 -32.2201 -29.6997 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1988.06 1526.42 mo
(5\3275\327256 + S\(2\))
[-30.4202 -29.8801 -30.4202 -29.8801 -30.4202 -30.4202 -30.4203 -13.5598 -29.8801 -13.5598 -28.3805 -18.7197 
-30.4203 0 ]ysh
1176.63 1819.58 mo
1343.71 1819.58 li
1359.36 1819.58 1372.05 1806.89 1372.05 1791.24 cv
1372.05 1139.27 li
1372.05 1123.61 1359.36 1110.92 1343.71 1110.92 cv
1176.63 1110.92 li
1160.98 1110.92 1148.28 1123.61 1148.28 1139.27 cv
1148.28 1791.24 li
1148.28 1806.89 1160.98 1819.58 1176.63 1819.58 cv
cp
1 .934081 .310826 .289158 cmyk
ef
5 lw
1176.63 1819.58 mo
1343.71 1819.58 li
1359.36 1819.58 1372.05 1806.89 1372.05 1791.24 cv
1372.05 1139.27 li
1372.05 1123.61 1359.36 1110.92 1343.71 1110.92 cv
1176.63 1110.92 li
1160.98 1110.92 1148.28 1123.61 1148.28 1139.27 cv
1148.28 1791.24 li
1148.28 1806.89 1160.98 1819.58 1176.63 1819.58 cv
cp
.869291 .537774 0 0 cmyk
@
976.7 1820.77 mo
1090.09 1820.77 li
1105.75 1820.77 1118.44 1808.08 1118.44 1792.42 cv
1118.44 1140.46 li
1118.44 1124.8 1105.75 1112.11 1090.09 1112.11 cv
976.7 1112.11 li
961.05 1112.11 948.36 1124.8 948.36 1140.46 cv
948.36 1792.42 li
948.36 1808.08 961.05 1820.77 976.7 1820.77 cv
cp
.00204471 .260136 1 0 cmyk
ef
976.7 1820.77 mo
1090.09 1820.77 li
1105.75 1820.77 1118.44 1808.08 1118.44 1792.42 cv
1118.44 1140.46 li
1118.44 1124.8 1105.75 1112.11 1090.09 1112.11 cv
976.7 1112.11 li
961.05 1112.11 948.36 1124.8 948.36 1140.46 cv
948.36 1792.42 li
948.36 1808.08 961.05 1820.77 976.7 1820.77 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1051.42 1532.3 mo
(IGDN)
[-16.0199 -38.2196 -37.8003 0 ]ysh
793.59 1820.77 mo
891.67 1820.77 li
907.32 1820.77 920.01 1808.08 920.01 1792.42 cv
920.01 1140.46 li
920.01 1124.8 907.32 1112.11 891.67 1112.11 cv
793.59 1112.11 li
777.94 1112.11 765.25 1124.8 765.25 1140.46 cv
765.25 1792.42 li
765.25 1808.08 777.94 1820.77 793.59 1820.77 cv
cp
.690364 .932311 0 0 cmyk
ef
793.59 1820.77 mo
891.67 1820.77 li
907.32 1820.77 920.01 1808.08 920.01 1792.42 cv
920.01 1140.46 li
920.01 1124.8 907.32 1112.11 891.67 1112.11 cv
793.59 1112.11 li
777.94 1112.11 765.25 1124.8 765.25 1140.46 cv
765.25 1792.42 li
765.25 1808.08 777.94 1820.77 793.59 1820.77 cv
cp
@
8 lw
1118.44 1466.44 mo
1148.28 1465.25 li
1 /0 /CSD get_res sepcs
1 sep
@
920.01 1466.44 mo
948.36 1466.44 li
@
1390.59 1465.25 mo
1457.09 1465.25 li
@
1372.05 1465.25 mo
1381.33 1464.72 1389.98 1460.39 1395.97 1453.29 cv
1392.21 1460.82 1392.21 1469.69 1395.97 1477.21 cv
1389.98 1470.12 1381.33 1465.79 1372.05 1465.25 cv
cp
ef
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1279.39 1743.05 mo
(Conv2dT: )
[-31.7404 -32.2797 -32.2202 -28.3804 -30.4203 -32.2201 -29.6997 -16.5601 0 ]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
1279.39 1495.99 mo
(5\3275\3273 + S\(2\))
[-30.4203 -29.88 -30.4203 -29.88 -30.4202 -13.5599 -29.88 -13.5599 -28.3804 -18.7198 -30.4202 0 
]ysh
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
862.58 1565.71 mo
(Sigmoid)
[-28.3804 -14.7601 -28.4399 -48.7803 -32.2797 -14.7601 0 ]ysh
4302.63 1830.29 mo
4400.7 1830.29 li
4416.36 1830.29 4429.05 1817.6 4429.05 1801.94 cv
4429.05 1129.65 li
4429.05 1113.99 4416.36 1101.3 4400.7 1101.3 cv
4302.63 1101.3 li
4286.97 1101.3 4274.28 1113.99 4274.28 1129.65 cv
4274.28 1801.94 li
4274.28 1817.6 4286.97 1830.29 4302.63 1830.29 cv
cp
1 /0 /CSD get_res sepcs
1 sep
ef
4285.41 1764.29 mo
4412.15 1764.29 li
4412.15 1106.32 li
4285.41 1106.32 li
cp
ef
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: LYAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EJZYNT+Calibri-Bold gcheck setglobal} if
4 5014 455 <00010016fe9503b403c600240063b10102435558b60109090e001a1bb802
42b4241a0a1a18b80273400f400e1a1f49190a13490a4b044f004b00183f
3f3f3f12393f01192f18d41aed123910dded123912392fcd30311b400c1f
49190a13490a4b044f004b00183f3f3f3f12393f3031592103060623222e
023713262627012634363633321e02171333133e0233321616140702836c
09504d2830180207770d1505fecd0d18392f2b321c0e07d203c006132c37
2b391b08fec4191607101811012b06190e033423251508030c1917fdab02
611a110808162519>EJZYNT+Calibri-Bold AddT42Char 
EJZYNT+Calibri-Bold /CharStrings get begin
/y 455 def
end
EJZYNT+Calibri-Bold /Encoding get
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EJZYNT+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two /three /.notdef /five /six 3{/.notdef}rp /colon 
8{/.notdef}rp /C /D /E /F /G /.notdef /I 
2{/.notdef}rp /L /.notdef /N /.notdef /P /.notdef /R 
/S /T /U 11{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r /s /t /u /v 
2{/.notdef}rp /y /z 92{/.notdef}rp /multiply 40{/.notdef}rp]
EJZYNT+Calibri-Bold nf
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4369.42 1686.89 mo
(Layer Normalization)
[-25.3802 -29.6403 -28.4399 -30.1803 -21.2998 -13.5598 -39.5398 -32.2797 -21.2998 -48.7802 -29.6403 -14.7601 
-14.7601 -23.8202 -29.6401 -20.8201 -14.7601 -32.2797 0 ]ysh
4302.63 1830.29 mo
4400.7 1830.29 li
4416.36 1830.29 4429.05 1817.6 4429.05 1801.94 cv
4429.05 1129.65 li
4429.05 1113.99 4416.36 1101.3 4400.7 1101.3 cv
4302.63 1101.3 li
4286.97 1101.3 4274.28 1113.99 4274.28 1129.65 cv
4274.28 1801.94 li
4274.28 1817.6 4286.97 1830.29 4302.63 1830.29 cv
cp
1 /0 /CSD get_res sepcs
1 sep
ef
4285.41 1764.29 mo
4412.15 1764.29 li
4412.15 1106.32 li
4285.41 1106.32 li
cp
ef
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4369.42 1686.89 mo
(Layer Normalization)
[-25.3802 -29.6403 -28.4399 -30.1803 -21.2998 -13.5598 -39.5398 -32.2797 -21.2998 -48.7802 -29.6403 -14.7601 
-14.7601 -23.8202 -29.6401 -20.8201 -14.7601 -32.2797 0 ]ysh
4230.45 1465.79 mo
4274.28 1465.79 li
1 /0 /CSD get_res sepcs
1 sep
@
4230.62 1477.75 mo
4206.7 1465.79 li
4230.62 1453.83 li
4234.38 1461.36 4234.38 1470.23 4230.62 1477.75 cv
cp
ef
4146.32 816.83 mo
4278.61 816.83 li
4294.27 816.83 4306.96 804.13 4306.96 788.48 cv
4306.96 136.51 li
4306.96 120.86 4294.27 108.16 4278.61 108.16 cv
4146.32 108.16 li
4130.66 108.16 4117.97 120.86 4117.97 136.51 cv
4117.97 788.48 li
4117.97 804.13 4130.66 816.83 4146.32 816.83 cv
cp
.690364 .932311 0 0 cmyk
ef
5 lw
4146.32 816.83 mo
4278.61 816.83 li
4294.27 816.83 4306.96 804.13 4306.96 788.48 cv
4306.96 136.51 li
4306.96 120.86 4294.27 108.16 4278.61 108.16 cv
4146.32 108.16 li
4130.66 108.16 4117.97 120.86 4117.97 136.51 cv
4117.97 788.48 li
4117.97 804.13 4130.66 816.83 4146.32 816.83 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
EJZYNT+Calibri-Bold*1 [-2.64e-06 -60 -60 2.64e-06 0 0 ]msf
4230.58 542.76 mo
(PReLU)
[-31.9199 -33.7802 -30.1803 -25.3804 0 ]ysh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/EJZYNT+Calibri-Bold*1 uf
/EJZYNT+Calibri-Bold uf
/LYAAAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
