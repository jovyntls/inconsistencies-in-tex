\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{IEEEexample:BSTcontrol}
\citation{Schlafer2013,Balatsoukas-Stimming2015,Giard_TCASI_2016,Giard_JETCAS_2017}
\citation{Giard_TCASI_2016,Giard_JETCAS_2017}
\citation{Sarkis_TCOMM_2015}
\citation{ArikanFirst}
\citation{Leroux2011}
\providecommand\@newglossary[4]{}
\@newglossary{main}{glg}{gls}{glo}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}{section.1}\protected@file@percent }
\newlabel{sec:intro}{{I}{1}{Introduction}{section.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Background}{1}{section.2}\protected@file@percent }
\newlabel{sec:bg}{{II}{1}{Background}{section.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {II-A}}Encoding of Polar Codes}{1}{subsection.2.1}\protected@file@percent }
\newlabel{sec:bg:enc}{{\mbox  {II-A}}{1}{Encoding of Polar Codes}{subsection.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {II-B}}Successive-Cancellation Decoding and Simplified Successive-Cancellation Decoding}{1}{subsection.2.2}\protected@file@percent }
\newlabel{sec:bg:sc}{{\mbox  {II-B}}{1}{Successive-Cancellation Decoding and Simplified Successive-Cancellation Decoding}{subsection.2.2}{}}
\newlabel{eqn:sc:f}{{1}{1}{Successive-Cancellation Decoding and Simplified Successive-Cancellation Decoding}{equation.2.1}{}}
\citation{Leroux2011}
\citation{Alamdar-Yazdi2011}
\citation{Giard_TCASI_2016}
\citation{Giard_TCASI_2016}
\citation{shah_coarsely_2019,Koike-Akino2019}
\newlabel{fig:pc8}{{1a}{2}{Subfigure 1a}{subfigure.1.1}{}}
\newlabel{sub@fig:pc8}{{(a)}{a}{Subfigure 1a\relax }{subfigure.1.1}{}}
\newlabel{fig:sc-tree}{{1b}{2}{Subfigure 1b}{subfigure.1.2}{}}
\newlabel{sub@fig:sc-tree}{{(b)}{b}{Subfigure 1b\relax }{subfigure.1.2}{}}
\newlabel{fig:ssc-tree}{{1c}{2}{Subfigure 1c}{subfigure.1.3}{}}
\newlabel{sub@fig:ssc-tree}{{(c)}{c}{Subfigure 1c\relax }{subfigure.1.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Graph and decoder-tree representations of an $(8,\,5)$ polar code.}}{2}{figure.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {Graph}}}{2}{subfigure.1.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {SC Decoder Tree}}}{2}{subfigure.1.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {SSC Decoder Tree}}}{2}{subfigure.1.3}\protected@file@percent }
\newlabel{fig:pc_8_5}{{1}{2}{Graph and decoder-tree representations of an $(8,\,5)$ polar code}{figure.1}{}}
\newlabel{eqn:sc:estu}{{2}{2}{Successive-Cancellation Decoding and Simplified Successive-Cancellation Decoding}{equation.2.2}{}}
\newlabel{eqn:sc:g}{{3}{2}{Successive-Cancellation Decoding and Simplified Successive-Cancellation Decoding}{equation.2.3}{}}
\newlabel{eqn:sc:combine}{{4}{2}{Successive-Cancellation Decoding and Simplified Successive-Cancellation Decoding}{equation.2.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Fully-unrolled deeply-pipelined decoder for a systematic (8, 5) polar code. Clock signals omitted for clarity. CC stands for clock cycle.}}{2}{figure.2}\protected@file@percent }
\newlabel{fig:unrolled_deeply_arch_8_5}{{2}{2}{Fully-unrolled deeply-pipelined decoder for a systematic (8, 5) polar code. Clock signals omitted for clarity. CC stands for \glsentrylong {cc}}{figure.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces Block types used in the unrolled decoders.}}{2}{table.1}\protected@file@percent }
\newlabel{tab:block-types}{{I}{2}{Block types used in the unrolled decoders}{table.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {II-C}}Unrolled and Pipelined Hardware Architectures}{2}{subsection.2.3}\protected@file@percent }
\newlabel{sec:bg:unrolled}{{\mbox  {II-C}}{2}{Unrolled and Pipelined Hardware Architectures}{subsection.2.3}{}}
\citation{tishby2000information}
\citation{shah_coarsely_2019}
\citation{shah_MSIB_2023}
\citation{shah_coarsely_2019}
\citation{shah_MSIB_2023}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Setup for generating decoding \glspl {lut} on a single building block}}{3}{figure.3}\protected@file@percent }
\newlabel{fig:N2_LUT_setup}{{3}{3}{Setup for generating decoding \glspl {lut} on a single building block}{figure.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {II-D}}Functions as Look-up Tables}{3}{subsection.2.4}\protected@file@percent }
\newlabel{sec:bg:lut}{{\mbox  {II-D}}{3}{Functions as Look-up Tables}{subsection.2.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Unrolled and Pipelined LUT-based Simplified Successive-Cancellation Decoding}{3}{section.3}\protected@file@percent }
\newlabel{sec:gen}{{III}{3}{Unrolled and Pipelined LUT-based Simplified Successive-Cancellation Decoding}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {III-A}}Look-up Table Generation}{3}{subsection.3.1}\protected@file@percent }
\newlabel{sec:gen:lut}{{\mbox  {III-A}}{3}{Look-up Table Generation}{subsection.3.1}{}}
\newlabel{eqn:ib:estu}{{5}{3}{Look-up Table Generation}{equation.3.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {III-B}}Hardware-Efficient Look-up Tables}{3}{subsection.3.2}\protected@file@percent }
\newlabel{sec:lut:variants}{{\mbox  {III-B}}{3}{Hardware-Efficient Look-up Tables}{subsection.3.2}{}}
\citation{Sarkis2014a}
\citation{Giard_TCASI_2016}
\citation{Tal2011a}
\expandafter \gdef \csname pgfplots@legend@to@name@ec-perf-legend\endcsname {\begingroup \def \pgfplots@legend@to@name {\pgfkeysdef {/pgfplots/every axis legend}{\pgfkeysalso {cells={anchor=center},inner xsep={3pt},inner ysep={2pt},nodes={inner sep=2pt,text depth=0.15em},anchor={north east},shape={rectangle},fill={white},draw={black},at={(0.98,0.98)},anchor={center},cells={anchor=west},column sep={2mm},font={\fontsize {8pt}{7.2}\selectfont }}}\pgfkeysdef {/pgfplots/every legend image post}{}\def \numplots {5}\def \plotnum {0}\def \plotnumofactualtype {0}\matrix [/pgfplots/every axis legend]{\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {empty legend={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node [anchor=east]{Floating point:};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {color={black},solid={\pgfkeysnovalue },thick={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {empty legend={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {empty legend={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node [anchor=east]{Fixed point:};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {color={blue},thick={\pgfkeysnovalue },dashed={\pgfkeysnovalue },mark={o},mark options={solid}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Q_i.Q_c=5.4$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {color={orange},thick={\pgfkeysnovalue },dashed={\pgfkeysnovalue },mark={square},mark options={solid}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Q_i.Q_c=4.4$};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {empty legend={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node [anchor=east]{LUTs:};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {color={red},thick={\pgfkeysnovalue },dotted={\pgfkeysnovalue },mark={+},mark options={solid}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{IB};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {color={teal},thick={\pgfkeysnovalue },dotted={\pgfkeysnovalue },mark={asterisk},mark options={solid}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{MS-IB/re-MS-IB};\\};}\ifpgfpicture \pgfplots@legend@to@name \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz [/pgfplots/every legend to name picture/.try]{\pgfplots@legend@to@name }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup }
\newlabel{eqn:lut:minsum}{{6}{4}{Hardware-Efficient Look-up Tables}{equation.3.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {III-C}}Unrolled-Architecture Generation}{4}{subsection.3.3}\protected@file@percent }
\newlabel{sec:gen:unrolled}{{\mbox  {III-C}}{4}{Unrolled-Architecture Generation}{subsection.3.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Implementation and Results}{4}{section.4}\protected@file@percent }
\newlabel{sec:impl}{{IV}{4}{Implementation and Results}{section.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces min-sum for $\mathcal  {T}$ in the MS-IB decoder.}}{4}{figure.4}\protected@file@percent }
\newlabel{fig:minf2}{{4}{4}{min-sum for $\mathcal {T}$ in the MS-IB decoder}{figure.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces min-sum for $\mathcal  {T}_{re}$ in the re-MS-IB decoder.}}{4}{figure.5}\protected@file@percent }
\newlabel{fig:minf3}{{5}{4}{min-sum for $\mathcal {T}_{re}$ in the re-MS-IB decoder}{figure.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {IV-A}}Functional Blocks in \gls {lut}-based Decoders}{4}{subsection.4.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {IV-B}}Error-correction Performance and Impact of Quantization}{4}{subsection.4.2}\protected@file@percent }
\newlabel{sec:impl:ec-perf}{{\mbox  {IV-B}}{4}{Error-correction Performance and Impact of Quantization}{subsection.4.2}{}}
\bibstyle{IEEEtran}
\bibdata{IEEEabrv,ConfAbrv,references}
\newlabel{ec-perf-legend}{{\expandafter\protect\csname pgfplots@legend@to@name@ec-perf-legend\endcsname}{5}{Error-correction Performance and Impact of Quantization}{pgfplotslink.4.0}{}}
\newlabel{ec-perf-legend}{{\expandafter\protect\csname pgfplots@legend@to@name@ec-perf-legend\endcsname}{5}{Error-correction Performance and Impact of Quantization}{pgfplotslink.4.0}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Error-correction performance of the systematic $(128, 64)$ polar code.}}{5}{figure.6}\protected@file@percent }
\newlabel{fig:ecc-cmp}{{6}{5}{Error-correction performance of the systematic $(128, 64)$ polar code}{figure.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces Comparison of unrolled decoders for a systematic $(128,64)$ polar code. All decoders have an initiation interval of $10$.}}{5}{table.2}\protected@file@percent }
\newlabel{tab:cmp_asic}{{II}{5}{Comparison of unrolled decoders for a systematic $(128,64)$ polar code. All decoders have an initiation interval of $10$}{table.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\mbox  {IV-C}}Comparison of the Unrolled Decoders}{5}{subsection.4.3}\protected@file@percent }
\newlabel{sec:impl:cmp}{{\mbox  {IV-C}}{5}{Comparison of the Unrolled Decoders}{subsection.4.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Conclusion}{5}{section.5}\protected@file@percent }
\newlabel{sec:conclusion}{{V}{5}{Conclusion}{section.5}{}}
\gdef \@abspage@last{5}
